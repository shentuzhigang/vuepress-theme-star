"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8097],{61334:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-5eb204fe",path:"/vuepress-next/reference/node-api.html",title:"Node API",lang:"en-US",frontmatter:{},excerpt:'<h1 id="node-api" tabindex="-1"><a class="header-anchor" href="#node-api" aria-hidden="true">#</a> Node API</h1>\n<NpmBadge package="@vuepress/core" />\n<p>Node API is provided by <a href="https://www.npmjs.com/package/@vuepress/core" target="_blank" rel="noopener noreferrer">@vuepress/core</a> package. It is a dependency of the <a href="https://www.npmjs.com/package/vuepress" target="_blank" rel="noopener noreferrer">vuepress</a> package, and you can also install it separately:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #D4D4D4">npm i -D @vuepress/core@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h2>\n<p>The app instance is available in all hooks of <RouterLink to="/vuepress-next/reference/plugin-api.html">Plugin API</RouterLink>.</p>\n<p>The <code>BuildApp</code> and <code>DevApp</code> share almost the same properties and methods, except <a href="#build">build</a> and <a href="#dev">dev</a> method.</p>\n<h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">createBuildApp</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">config</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">AppConfig</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">BuildApp</span><span style="color: #D4D4D4">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>Parameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>AppConfig</code></td>\n<td>Config to create a VuePress app.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Details:</p>\n<p>Create a build mode app instance, which is used for building static files.</p>\n</li>\n<li>\n<p>Example:</p>\n</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">build</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">async</span><span style="color: #D4D4D4"> () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> {</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">app</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">createBuildApp</span><span style="color: #D4D4D4">({</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// ...options</span></span>\n<span class="line"><span style="color: #D4D4D4">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// initialize and prepare</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">init</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">prepare</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// build</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">build</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// process onGenerated hook</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">pluginApi</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">hooks</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">onGenerated</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">process</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">)</span></span>\n<span class="line"><span style="color: #D4D4D4">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul>\n<li>Also see:\n<ul>\n<li><a href="#build">Node API &gt; App Methods &gt; build</a></li>\n</ul>\n</li>\n</ul>\n<h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp" aria-hidden="true">#</a> createDevApp</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">createDevApp</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">config</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">AppConfig</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">DevApp</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>Parameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>config</td>\n<td><code>AppConfig</code></td>\n<td>Config to create a VuePress app.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Details:</p>\n<p>Create a dev mode app instance, which is used for starting a dev server.</p>\n</li>\n<li>\n<p>Example:</p>\n</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">dev</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">async</span><span style="color: #D4D4D4"> () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> {</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">app</span><span style="color: #D4D4D4"> = </span><span style="color: #DCDCAA">createDevApp</span><span style="color: #D4D4D4">({</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// ...options</span></span>\n<span class="line"><span style="color: #D4D4D4">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// initialize and prepare</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">init</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">prepare</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// start dev server</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">closeDevServer</span><span style="color: #D4D4D4"> = </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">dev</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// set up file watchers</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">watchers</span><span style="color: #D4D4D4"> = []</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// restart dev server</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">restart</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">async</span><span style="color: #D4D4D4"> () </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> {</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">all</span><span style="color: #D4D4D4">([</span></span>\n<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #6A9955">// close all watchers</span></span>\n<span class="line"><span style="color: #D4D4D4">      ...</span><span style="color: #9CDCFE">watchers</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">map</span><span style="color: #D4D4D4">((</span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">item</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">close</span><span style="color: #D4D4D4">()),</span></span>\n<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #6A9955">// close current dev server</span></span>\n<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #DCDCAA">closeDevServer</span><span style="color: #D4D4D4">(),</span></span>\n<span class="line"><span style="color: #D4D4D4">    ])</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">dev</span><span style="color: #D4D4D4">()</span></span>\n<span class="line"><span style="color: #D4D4D4">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// process onWatched hook</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">pluginApi</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">hooks</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">onWatched</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">process</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">watchers</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">restart</span><span style="color: #D4D4D4">)</span></span>\n<span class="line"><span style="color: #D4D4D4">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><ul>\n<li>Also see:\n<ul>\n<li><a href="#dev">Node API &gt; App Methods &gt; dev</a></li>\n</ul>\n</li>\n</ul>\n<h2 id="app-properties" tabindex="-1"><a class="header-anchor" href="#app-properties" aria-hidden="true">#</a> App Properties</h2>\n<h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Version of VuePress app, i.e. version of <code>@vuepress/core</code> package.</p>\n</li>\n</ul>\n<h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3>\n<ul>\n<li>\n<p>Type: <code>AppOptions</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Options of VuePress app.</p>\n<p>The options come from the <code>config</code> argument in <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a>, while all optional fields will be filled with a default value.</p>\n</li>\n</ul>\n<h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3>\n<ul>\n<li>\n<p>Type: <code>boolean</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Environment flag used to identify whether the app is running in build mode, i.e. whether a <a href="#createbuildapp">BuildApp</a> instance.</p>\n</li>\n</ul>\n<h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3>\n<ul>\n<li>\n<p>Type: <code>boolean</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Environment flag used to identify whether the app is running in dev mode, i.e. whether a <a href="#createdevapp">DevApp</a> instance.</p>\n</li>\n</ul>\n<h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3>\n<ul>\n<li>\n<p>Type: <code>boolean</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Environment flag used to identify whether the debug mode is enabled.</p>\n</li>\n</ul>\n<h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>\n<ul>\n<li>\n<p>Type: <code>SiteData</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Site data that set by user, including all the <RouterLink to="/vuepress-next/reference/config.html#site-config">site config</RouterLink>, which will be used in client side.</p>\n</li>\n</ul>\n<h3 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h3>\n<ul>\n<li>\n<p>Type: <code>MarkdownIt</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>The <a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener noreferrer">markdown-it</a> instance used for parsing markdown content.</p>\n<p>It is only available in and after <RouterLink to="/vuepress-next/reference/plugin-api.html#oninitialized">onInitialized</RouterLink> hook.</p>\n</li>\n</ul>\n<h3 id="layouts" tabindex="-1"><a class="header-anchor" href="#layouts" aria-hidden="true">#</a> layouts</h3>\n<ul>\n<li>\n<p>Type: <code>Record&lt;string, string&gt;</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>The layout components map, of which the key is the layout name, the value is the absolute file path of the layout component.</p>\n<p>It is only available in and after <RouterLink to="/vuepress-next/reference/plugin-api.html#oninitialized">onInitialized</RouterLink> hook.</p>\n</li>\n</ul>\n<h3 id="pages" tabindex="-1"><a class="header-anchor" href="#pages" aria-hidden="true">#</a> pages</h3>\n<ul>\n<li>\n<p>Type: <code>Page[]</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>The <a href="#page">Page</a> object array.</p>\n<p>It is only available in and after <RouterLink to="/vuepress-next/reference/plugin-api.html#oninitialized">onInitialized</RouterLink> hook.</p>\n</li>\n</ul>\n<h2 id="app-methods" tabindex="-1"><a class="header-anchor" href="#app-methods" aria-hidden="true">#</a> App Methods</h2>\n<h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3>\n<ul>\n<li>\n<p>Utils:</p>\n<ul>\n<li><code>dir.cache()</code>: resolve to cache directory</li>\n<li><code>dir.temp()</code>: resolve to temp directory</li>\n<li><code>dir.source()</code>: resolve to source directory</li>\n<li><code>dir.dest()</code>: resolve to dest directory</li>\n<li><code>dir.client()</code>: resolve to <code>@vuepress/client</code> directory</li>\n<li><code>dir.public()</code>: resolve to public directory</li>\n</ul>\n</li>\n<li>\n<p>Signature:</p>\n</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">AppDirFunction</span><span style="color: #D4D4D4"> = (...</span><span style="color: #9CDCFE">args</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">[]) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">string</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p>Details:</p>\n<p>Utils to resolve the absolute file path in corresponding directory.</p>\n<p>If you don\'t provide any arguments, it will return the absolute path of the directory.</p>\n</li>\n<li>\n<p>Example:</p>\n</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #6A9955">// resolve the absolute file path of the `${sourceDir}/README.md`</span></span>\n<span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">homeSourceFile</span><span style="color: #D4D4D4"> = </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">dir</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">source</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&#39;README.md&#39;</span><span style="color: #D4D4D4">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp" aria-hidden="true">#</a> writeTemp</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #DCDCAA">writeTemp</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">file</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">string</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">content</span><span style="color: #D4D4D4">: </span><span style="color: #9CDCFE">string</span><span style="color: #D4D4D4">): </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #9CDCFE">string</span><span style="color: #D4D4D4">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>Parameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file</td>\n<td><code>string</code></td>\n<td>Filepath of the temp file that going to be wrote. Relative to temp directory.</td>\n</tr>\n<tr>\n<td>content</td>\n<td><code>string</code></td>\n<td>Content of the temp file that going to be wrote.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Details:</p>\n<p>A method to write temp file.</p>\n<p>The written file could be imported via <code>@temp</code> alias in client files.</p>\n</li>\n<li>\n<p>Example:</p>\n</li>\n</ul>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #4EC9B0">module</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">exports</span><span style="color: #D4D4D4"> = {</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// write temp file in onPrepared hook</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">async</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">onPrepared</span><span style="color: #D4D4D4">() {</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">writeTemp</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&#39;foo.js&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #CE9178">&#39;export const foo = </span><span style="color: #D7BA7D">\\&#39;</span><span style="color: #CE9178">bar</span><span style="color: #D7BA7D">\\&#39;</span><span style="color: #CE9178">&#39;</span><span style="color: #D4D4D4">)</span></span>\n<span class="line"><span style="color: #D4D4D4">  }</span></span>\n<span class="line"><span style="color: #D4D4D4">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #6A9955">// import temp file in client code</span></span>\n<span class="line"><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> { </span><span style="color: #9CDCFE">foo</span><span style="color: #D4D4D4"> } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;@temp/foo&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #DCDCAA">init</span><span style="color: #D4D4D4">(): </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #569CD6">void</span><span style="color: #D4D4D4">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p>Details:</p>\n<p>Initialize VuePress app.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/advanced/architecture.html#core-process-and-hooks">Advanced &gt; Architecture &gt; Core Process and Hooks</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare" aria-hidden="true">#</a> prepare</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #DCDCAA">prepare</span><span style="color: #D4D4D4">(): </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #569CD6">void</span><span style="color: #D4D4D4">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p>Details:</p>\n<p>Prepare client temp files.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/advanced/architecture.html#core-process-and-hooks">Advanced &gt; Architecture &gt; Core Process and Hooks</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #DCDCAA">build</span><span style="color: #D4D4D4">(): </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #569CD6">void</span><span style="color: #D4D4D4">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p>Details:</p>\n<p>Generate static site files.</p>\n<p>This method is only available in <code>BuildApp</code>.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><a href="#createbuildapp">Node API &gt; App &gt; createBuildApp</a></li>\n<li><RouterLink to="/vuepress-next/advanced/architecture.html#core-process-and-hooks">Advanced &gt; Architecture &gt; Core Process and Hooks</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #DCDCAA">dev</span><span style="color: #D4D4D4">(): </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;() </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #569CD6">void</span><span style="color: #D4D4D4">&gt;&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p>Details:</p>\n<p>Start dev server.</p>\n<p>This method is only available in <code>DevApp</code>.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><a href="#createdevapp">Node API &gt; App &gt; createDevApp</a></li>\n<li><RouterLink to="/vuepress-next/advanced/architecture.html#core-process-and-hooks">Advanced &gt; Architecture &gt; Core Process and Hooks</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h2>\n<h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage" aria-hidden="true">#</a> createPage</h3>\n<ul>\n<li>Signature:</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">createPage</span><span style="color: #D4D4D4">: (</span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">App</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">options</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">PageOptions</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">Promise</span><span style="color: #D4D4D4">&lt;</span><span style="color: #4EC9B0">Page</span><span style="color: #D4D4D4">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>Parameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>app</td>\n<td><code>App</code></td>\n<td>The VuePress app instance.</td>\n</tr>\n<tr>\n<td>options</td>\n<td><code>PageOptions</code></td>\n<td>Options to create VuePress page.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Details:</p>\n<p>Create a VuePress page object.</p>\n</li>\n<li>\n<p>Example:</p>\n</li>\n</ul>\n<div class="language-typescript ext-ts line-numbers-mode"><pre v-pre class="shiki" style="background-color: #1E1E1E"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> { </span><span style="color: #4FC1FF">createPage</span><span style="color: #D4D4D4"> } = </span><span style="color: #DCDCAA">require</span><span style="color: #D4D4D4">(</span><span style="color: #CE9178">&#39;@vuepress/core&#39;</span><span style="color: #D4D4D4">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #4EC9B0">module</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">exports</span><span style="color: #D4D4D4"> = {</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// create an extra page in onInitialized hook</span></span>\n<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #569CD6">async</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">onInitialized</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">) {</span></span>\n<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">.</span><span style="color: #9CDCFE">pages</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">push</span><span style="color: #D4D4D4">(</span></span>\n<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #C586C0">await</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">createPage</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">app</span><span style="color: #D4D4D4">, {</span></span>\n<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">path:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;/foo.html&#39;</span><span style="color: #D4D4D4">,</span></span>\n<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">frontmatter:</span><span style="color: #D4D4D4"> {</span></span>\n<span class="line"><span style="color: #D4D4D4">          </span><span style="color: #9CDCFE">layout:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;Layout&#39;</span><span style="color: #D4D4D4">,</span></span>\n<span class="line"><span style="color: #D4D4D4">        },</span></span>\n<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #9CDCFE">content:</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">`</span><span style="color: #D7BA7D">\\</span></span>\n<span class="line"><span style="color: #CE9178"># Foo Page</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #CE9178">Hello, world.</span></span>\n<span class="line"><span style="color: #CE9178">`</span><span style="color: #D4D4D4">,</span></span>\n<span class="line"><span style="color: #D4D4D4">      })</span></span>\n<span class="line"><span style="color: #D4D4D4">    )</span></span>\n<span class="line"><span style="color: #D4D4D4">  }</span></span>\n<span class="line"><span style="color: #D4D4D4">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul>\n<li>Also see:\n<ul>\n<li><a href="#pages">Node API &gt; App Properties &gt; pages</a></li>\n<li><RouterLink to="/vuepress-next/advanced/cookbook/adding-extra-pages.html">Cookbook &gt; Adding Extra Pages</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h2 id="page-properties" tabindex="-1"><a class="header-anchor" href="#page-properties" aria-hidden="true">#</a> Page Properties</h2>\n<h3 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> key</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Identifier of the page.</p>\n<p>The page key would be used as the <a href="https://next.router.vuejs.org/api/#name-2" target="_blank" rel="noopener noreferrer">name</a> of the page route.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/reference/components.html#content">Built-in Components &gt; Content</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> path</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Route path of the page.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/guide/page.html#routing">Guide &gt; Page &gt; Routing</RouterLink></li>\n<li><a href="#pathinferred">Node API &gt; Page Properties &gt; pathInferred</a></li>\n</ul>\n</li>\n</ul>\n<h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Title of the page.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/reference/frontmatter.html#title">Frontmatter &gt; title</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="lang" tabindex="-1"><a class="header-anchor" href="#lang" aria-hidden="true">#</a> lang</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Language of the page.</p>\n</li>\n<li>\n<p>Example:</p>\n<ul>\n<li><code>\'en-US\'</code></li>\n<li><code>\'zh-CN\'</code></li>\n</ul>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/reference/frontmatter.html#title">Frontmatter &gt; lang</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter" aria-hidden="true">#</a> frontmatter</h3>\n<ul>\n<li>\n<p>Type: <code>PageFrontmatter</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Frontmatter of the page.</p>\n</li>\n<li>\n<p>Also see:</p>\n<ul>\n<li><RouterLink to="/vuepress-next/reference/frontmatter.html">Frontmatter</RouterLink></li>\n</ul>\n</li>\n</ul>\n<h3 id="excerpt" tabindex="-1"><a class="header-anchor" href="#excerpt" aria-hidden="true">#</a> excerpt</h3>\n<ul>\n<li>\n<p>Type: <code>string</code></p>\n</li>\n<li>\n<p>Details:</p>\n<p>Excerpt of the page.</p>\n<p>If a Markdown file contains a `</p>\n</li>\n</ul>\n',headers:[{level:2,title:"App",slug:"app",children:[{level:3,title:"createBuildApp",slug:"createbuildapp",children:[]},{level:3,title:"createDevApp",slug:"createdevapp",children:[]}]},{level:2,title:"App Properties",slug:"app-properties",children:[{level:3,title:"version",slug:"version",children:[]},{level:3,title:"options",slug:"options",children:[]},{level:3,title:"env.isBuild",slug:"env-isbuild",children:[]},{level:3,title:"env.isDev",slug:"env-isdev",children:[]},{level:3,title:"env.isDebug",slug:"env-isdebug",children:[]},{level:3,title:"siteData",slug:"sitedata",children:[]},{level:3,title:"markdown",slug:"markdown",children:[]},{level:3,title:"layouts",slug:"layouts",children:[]},{level:3,title:"pages",slug:"pages",children:[]}]},{level:2,title:"App Methods",slug:"app-methods",children:[{level:3,title:"dir",slug:"dir",children:[]},{level:3,title:"writeTemp",slug:"writetemp",children:[]},{level:3,title:"init",slug:"init",children:[]},{level:3,title:"prepare",slug:"prepare",children:[]},{level:3,title:"build",slug:"build",children:[]},{level:3,title:"dev",slug:"dev",children:[]}]},{level:2,title:"Page",slug:"page",children:[{level:3,title:"createPage",slug:"createpage",children:[]}]},{level:2,title:"Page Properties",slug:"page-properties",children:[{level:3,title:"key",slug:"key",children:[]},{level:3,title:"path",slug:"path",children:[]},{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"frontmatter",slug:"frontmatter",children:[]},{level:3,title:"excerpt",slug:"excerpt",children:[]},{level:3,title:"headers",slug:"headers",children:[]},{level:3,title:"data",slug:"data",children:[]},{level:3,title:"content",slug:"content",children:[]},{level:3,title:"contentRendered",slug:"contentrendered",children:[]},{level:3,title:"date",slug:"date",children:[]},{level:3,title:"deps",slug:"deps",children:[]},{level:3,title:"hoistedTags",slug:"hoistedtags",children:[]},{level:3,title:"links",slug:"links",children:[]},{level:3,title:"pathInferred",slug:"pathinferred",children:[]},{level:3,title:"pathLocale",slug:"pathlocale",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"routeMeta",slug:"routemeta",children:[]},{level:3,title:"slug",slug:"slug",children:[]},{level:3,title:"filePath",slug:"filepath",children:[]},{level:3,title:"filePathRelative",slug:"filepathrelative",children:[]}]}],git:{updatedTime:1639839959e3,contributors:[{name:"Starzkg",email:"1600337300@qq.com",commits:1},{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:5.5,words:1649},filePathRelative:"vuepress-next/reference/node-api.md",content:"# Node API\n\n<NpmBadge package=\"@vuepress/core\" />\n\nNode API is provided by [@vuepress/core](https://www.npmjs.com/package/@vuepress/core) package. It is a dependency of the [vuepress](https://www.npmjs.com/package/vuepress) package, and you can also install it separately:\n\n```bash\nnpm i -D @vuepress/core@next\n```\n\n## App\n\nThe app instance is available in all hooks of [Plugin API](./plugin-api.md).\n\nThe `BuildApp` and `DevApp` share almost the same properties and methods, except [build](#build) and [dev](#dev) method.\n\n### createBuildApp\n\n- Signature:\n\n```ts\nconst createBuildApp: (config: AppConfig) => BuildApp;\n```\n\n- Parameters:\n\n| Parameter | Type        | Description                      |\n|-----------|-------------|----------------------------------|\n| config    | `AppConfig` | Config to create a VuePress app. |\n\n- Details:\n\n  Create a build mode app instance, which is used for building static files.\n\n- Example:\n\n```ts\nconst build = async () => {\n  const app = createBuildApp({\n    // ...options\n  })\n\n  // initialize and prepare\n  await app.init()\n  await app.prepare()\n\n  // build\n  await app.build()\n\n  // process onGenerated hook\n  await app.pluginApi.hooks.onGenerated.process(app)\n}\n```\n\n- Also see:\n  - [Node API > App Methods > build](#build)\n\n### createDevApp\n\n- Signature:\n\n```ts\nconst createDevApp: (config: AppConfig) => DevApp\n```\n\n- Parameters:\n\n| Parameter | Type        | Description                      |\n|-----------|-------------|----------------------------------|\n| config    | `AppConfig` | Config to create a VuePress app. |\n\n- Details:\n\n  Create a dev mode app instance, which is used for starting a dev server.\n\n- Example:\n\n```ts\nconst dev = async () => {\n  const app = createDevApp({\n    // ...options\n  })\n\n  // initialize and prepare\n  await app.init()\n  await app.prepare()\n\n  // start dev server\n  const closeDevServer = await app.dev()\n\n  // set up file watchers\n  const watchers = []\n\n  // restart dev server\n  const restart = async () => {\n    await Promise.all([\n      // close all watchers\n      ...watchers.map((item) => item.close()),\n      // close current dev server\n      closeDevServer(),\n    ])\n    await dev()\n  }\n\n  // process onWatched hook\n  await app.pluginApi.hooks.onWatched.process(app, watchers, restart)\n}\n```\n\n- Also see:\n  - [Node API > App Methods > dev](#dev)\n\n## App Properties\n\n### version\n\n- Type: `string`\n\n- Details:\n\n  Version of VuePress app, i.e. version of `@vuepress/core` package.\n\n### options\n\n- Type: `AppOptions`\n\n- Details:\n\n  Options of VuePress app.\n\n  The options come from the `config` argument in [createBuildApp](#createbuildapp) / [createDevApp](#createdevapp), while all optional fields will be filled with a default value.\n\n### env.isBuild\n\n- Type: `boolean`\n\n- Details:\n\n  Environment flag used to identify whether the app is running in build mode, i.e. whether a [BuildApp](#createbuildapp) instance.\n\n### env.isDev\n\n- Type: `boolean`\n\n- Details:\n\n  Environment flag used to identify whether the app is running in dev mode, i.e. whether a [DevApp](#createdevapp) instance.\n\n### env.isDebug\n\n- Type: `boolean`\n\n- Details:\n\n  Environment flag used to identify whether the debug mode is enabled.\n\n### siteData\n\n- Type: `SiteData`\n\n- Details:\n\n  Site data that set by user, including all the [site config](./config.md#site-config), which will be used in client side.\n\n### markdown\n\n- Type: `MarkdownIt`\n\n- Details:\n\n  The [markdown-it](https://github.com/markdown-it/markdown-it) instance used for parsing markdown content.\n\n  It is only available in and after [onInitialized](./plugin-api.md#oninitialized) hook.\n\n### layouts\n\n- Type: `Record<string, string>`\n\n- Details:\n\n  The layout components map, of which the key is the layout name, the value is the absolute file path of the layout component.\n\n  It is only available in and after [onInitialized](./plugin-api.md#oninitialized) hook.\n\n### pages\n\n- Type: `Page[]`\n\n- Details:\n\n  The [Page](#page) object array.\n\n  It is only available in and after [onInitialized](./plugin-api.md#oninitialized) hook.\n\n## App Methods\n\n### dir\n\n- Utils:\n  - `dir.cache()`: resolve to cache directory\n  - `dir.temp()`: resolve to temp directory\n  - `dir.source()`: resolve to source directory\n  - `dir.dest()`: resolve to dest directory\n  - `dir.client()`: resolve to `@vuepress/client` directory\n  - `dir.public()`: resolve to public directory\n\n- Signature:\n\n```ts\ntype AppDirFunction = (...args: string[]) => string\n```\n\n- Details:\n\n  Utils to resolve the absolute file path in corresponding directory.\n\n  If you don't provide any arguments, it will return the absolute path of the directory.\n\n- Example:\n\n```ts\n// resolve the absolute file path of the `${sourceDir}/README.md`\nconst homeSourceFile = app.dir.source('README.md')\n```\n\n### writeTemp\n\n- Signature:\n\n```ts\nwriteTemp(file: string, content: string): Promise<string>\n```\n\n- Parameters:\n\n| Parameter | Type     | Description                                                                   |\n|-----------|----------|-------------------------------------------------------------------------------|\n| file      | `string` | Filepath of the temp file that going to be wrote. Relative to temp directory. |\n| content   | `string` | Content of the temp file that going to be wrote.                              |\n\n- Details:\n\n  A method to write temp file.\n\n  The written file could be imported via `@temp` alias in client files.\n\n- Example:\n\n```js\nmodule.exports = {\n  // write temp file in onPrepared hook\n  async onPrepared() {\n    await app.writeTemp('foo.js', 'export const foo = \\'bar\\'')\n  }\n}\n```\n\n```ts\n// import temp file in client code\nimport { foo } from '@temp/foo'\n```\n\n### init\n\n- Signature:\n\n```ts\ninit(): Promise<void>\n```\n\n- Details:\n\n  Initialize VuePress app.\n\n- Also see:\n  - [Advanced > Architecture > Core Process and Hooks](../advanced/architecture.md#core-process-and-hooks)\n\n### prepare\n\n- Signature:\n\n```ts\nprepare(): Promise<void>\n```\n\n- Details:\n\n  Prepare client temp files.\n\n- Also see:\n  - [Advanced > Architecture > Core Process and Hooks](../advanced/architecture.md#core-process-and-hooks)\n\n### build\n\n- Signature:\n\n```ts\nbuild(): Promise<void>\n```\n\n- Details:\n\n  Generate static site files.\n\n  This method is only available in `BuildApp`.\n\n- Also see:\n  - [Node API > App > createBuildApp](#createbuildapp)\n  - [Advanced > Architecture > Core Process and Hooks](../advanced/architecture.md#core-process-and-hooks)\n\n### dev\n\n- Signature:\n\n```ts\ndev(): Promise<() => Promise<void>>\n```\n\n- Details:\n\n  Start dev server.\n\n  This method is only available in `DevApp`.\n\n- Also see:\n  - [Node API > App > createDevApp](#createdevapp)\n  - [Advanced > Architecture > Core Process and Hooks](../advanced/architecture.md#core-process-and-hooks)\n\n## Page\n\n### createPage\n\n- Signature:\n\n```ts\nconst createPage: (app: App, options: PageOptions) => Promise<Page>\n```\n\n- Parameters:\n\n| Parameter | Type          | Description                       |\n|-----------|---------------|-----------------------------------|\n| app       | `App`         | The VuePress app instance.        |\n| options   | `PageOptions` | Options to create VuePress page.  |\n\n- Details:\n\n  Create a VuePress page object.\n\n- Example:\n\n```ts\nconst { createPage } = require('@vuepress/core')\n\nmodule.exports = {\n  // create an extra page in onInitialized hook\n  async onInitialized(app) {\n    app.pages.push(\n      await createPage(app, {\n        path: '/foo.html',\n        frontmatter: {\n          layout: 'Layout',\n        },\n        content: `\\\n# Foo Page\n\nHello, world.\n`,\n      })\n    )\n  }\n}\n```\n\n- Also see:\n  - [Node API > App Properties > pages](#pages)\n  - [Cookbook > Adding Extra Pages](../advanced/cookbook/adding-extra-pages.md)\n\n## Page Properties\n\n### key\n\n- Type: `string`\n\n- Details:\n\n  Identifier of the page.\n\n  The page key would be used as the [name](https://next.router.vuejs.org/api/#name-2) of the page route.\n\n- Also see:\n  - [Built-in Components > Content](./components.md#content)\n\n### path\n\n- Type: `string`\n\n- Details:\n\n  Route path of the page.\n\n- Also see:\n  - [Guide > Page > Routing](../guide/page.md#routing)\n  - [Node API > Page Properties > pathInferred](#pathinferred)\n\n### title\n\n- Type: `string`\n\n- Details:\n\n  Title of the page.\n\n- Also see:\n  - [Frontmatter > title](./frontmatter.md#title)\n\n### lang\n\n- Type: `string`\n\n- Details:\n\n  Language of the page.\n\n- Example:\n  - `'en-US'`\n  - `'zh-CN'`\n\n- Also see:\n  - [Frontmatter > lang](./frontmatter.md#title)\n\n### frontmatter\n\n- Type: `PageFrontmatter`\n\n- Details:\n\n  Frontmatter of the page.\n\n- Also see:\n  - [Frontmatter](./frontmatter.md)\n\n### excerpt\n\n- Type: `string`\n\n- Details:\n\n  Excerpt of the page.\n\n  If a Markdown file contains a `\x3c!-- more --\x3e` comment, any content above the comment will be extracted and rendered as excerpt.\n\n  If you are building a custom theme for blogging, it would be helpful to generate a post list with excerpts.\n\n- Example:\n\n```md\nLines above `\x3c!-- more --\x3e` comment would be used as excerpt.\n\nIt's recommended to wrap the comment with empty lines to avoid rendering issue.\n\n\x3c!-- more --\x3e\n\nLines below `\x3c!-- more --\x3e` comment would not be used as excerpt.\n```\n\n### headers\n\n- Type: `PageHeader[]`\n\n```ts\ninterface PageHeader {\n  level: number\n  title: string\n  slug: string\n  children: PageHeader[]\n}\n```\n\n- Details:\n\n  Headers of the page.\n\n- Also see:\n  - [Config > markdown.extractHeaders](./config.md#markdown-extractheaders)\n\n### data\n\n- Type: `PageData`\n\n```ts\ninterface PageData {\n  key: string\n  path: string\n  title: string\n  lang: string\n  frontmatter: PageFrontmatter\n  excerpt: string\n  headers: PageHeader[]\n}\n```\n\n- Details:\n\n  Data of the page.\n\n  Page data would be available in client side.\n\n- Also see:\n  - [Client API > usePageData](./client-api.md#usepagedata)\n  - [Plugin API > extendsPage](./plugin-api.md#extendspage)\n\n### content\n\n- Type: `string`\n\n- Details:\n\n  Raw content of the page.\n\n### contentRendered\n\n- Type: `string`\n\n- Details:\n\n  Rendered content of the page.\n\n### date\n\n- Type: `string`\n\n- Details:\n\n  Date of the page, in 'yyyy-MM-dd' format.\n\n- Example:\n  - `'0000-00-00'`\n  - `'2021-08-16`'\n\n- Also see:\n  - [Frontmatter > date](./frontmatter.md#date)\n\n### deps\n\n- Type: `string[]`\n\n- Details:\n\n  Dependencies of the page.\n\n  For example, if users import code snippet in the page, the absolute file path of the imported file would be added to `deps`.\n\n- Also see:\n  - [Config > markdown.importCode](./config.md#markdown-importcode)\n\n### hoistedTags\n\n- Type: `string[]`\n\n- Details:\n\n  Hoisted tags of the page.\n\n- Also see:\n  - [Config > markdown.hoistTags](./config.md#markdown-hoisttags)\n\n### links\n\n- Type: `MarkdownLink[]`\n\n```ts\ninterface MarkdownLink {\n  raw: string\n  relative: string\n  absolute: string\n}\n```\n\n- Details:\n\n  Links of the page.\n\n### pathInferred\n\n- Type: `string | null`\n\n- Details:\n\n  Route path of the page that inferred from file path.\n\n  By default, the route path is inferred from the relative file path of the Markdown source file. However, users may explicitly set the route path, e.g. [permalink](#permalink), which would be used as the final route path of the page. So we keep the inferred path as a page property in case you may need it.\n\n  It would be `null` if the page does not come from a Markdown source file.\n\n- Example:\n  - `'/'`\n  - `'/foo.html'`\n\n- Also see:\n  - [Guide > Page > Routing](../guide/page.md#routing)\n  - [Node API > Page Properties > path](#path)\n\n### pathLocale\n\n- Type: `string`\n\n- Details:\n\n  Locale prefix of the page route path.\n\n  It is inferred from the relative file path of the Markdown source file and the key of `locales` option in user config.\n\n- Example:\n  - `'/'`\n  - `'/en/'`\n  - `'/zh/'`\n\n- Also see:\n  - [Config > locales](./config.md#locales)\n\n### permalink\n\n- Type: `string | null`\n\n- Details:\n\n  Permalink of the page.\n\n- Also see:\n  - [Frontmatter > permalink](./frontmatter.md#permalink)\n  - [Frontmatter > permalinkPattern](./frontmatter.md#permalinkpattern)\n\n### routeMeta\n\n- Type: `Record<string, unknown>`\n\n- Details:\n\n  Custom data to be attached to the route record of vue-router.\n\n- Also see:\n  - [Frontmatter > routeMeta](./frontmatter.md#routemeta)\n  - [vue-router > API Reference > RouteRecordRaw > meta](https://next.router.vuejs.org/api/#meta)\n\n::: tip What's the difference between route meta and page data?\nBoth [route meta](#routemeta) and [page data](#data) is available in client side. However, route meta is attached to the route record, so the route meta of all pages would be loaded at once when users enter your site. In the contrast, page data is saved in separated files, which would be loaded only when users enter the corresponding page.\n\nTherefore, it's not recommended to store large amounts of info into route meta, otherwise the initial loading speed will be affected a lot when your site has a large number of pages.\n:::\n\n### slug\n\n- Type: `string`\n\n- Details:\n\n  Slug of the page.\n\n  It is inferred from the filename of the Markdown source file.\n\n### filePath\n\n- Type: `string | null`\n\n- Details:\n\n  Absolute path of the Markdown source file of the page.\n\n  It would be `null` if the page does not come from a Markdown source file.\n\n### filePathRelative\n\n- Type: `string | null`\n\n- Details:\n\n  Relative path of the Markdown source file of the page.\n\n  It would be `null` if the page does not come from a Markdown source file.\n"}},1784:(n,e,s)=>{s.r(e),s.d(e,{default:()=>ke});var a=s(66252);const l=(0,a._)("h1",{id:"node-api",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#node-api","aria-hidden":"true"},"#"),(0,a.Uk)(" Node API")],-1),p=(0,a.uE)('<p>Node API is provided by <a href="https://www.npmjs.com/package/@vuepress/core" target="_blank" rel="noopener noreferrer">@vuepress/core</a> package. It is a dependency of the <a href="https://www.npmjs.com/package/vuepress" target="_blank" rel="noopener noreferrer">vuepress</a> package, and you can also install it separately:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/core@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h2>',3),t=(0,a.Uk)("The app instance is available in all hooks of "),o=(0,a.Uk)("Plugin API"),r=(0,a.Uk)("."),i=(0,a.uE)('<p>The <code>BuildApp</code> and <code>DevApp</code> share almost the same properties and methods, except <a href="#build">build</a> and <a href="#dev">dev</a> method.</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp" aria-hidden="true">#</a> createBuildApp</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BuildApp</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>Config to create a VuePress app.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a build mode app instance, which is used for building static files.</p></li><li><p>Example:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createBuildApp</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...options</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// initialize and prepare</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// build</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// process onGenerated hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onGenerated</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>Also see: <ul><li><a href="#build">Node API &gt; App Methods &gt; build</a></li></ul></li></ul><h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp" aria-hidden="true">#</a> createDevApp</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AppConfig</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DevApp</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>Config to create a VuePress app.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a dev mode app instance, which is used for starting a dev server.</p></li><li><p>Example:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createDevApp</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// ...options</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// initialize and prepare</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// start dev server</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">closeDevServer</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// set up file watchers</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">watchers</span><span style="color:#D4D4D4;"> = []</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// restart dev server</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">restart</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">([</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// close all watchers</span></span>\n<span class="line"><span style="color:#D4D4D4;">      ...</span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">close</span><span style="color:#D4D4D4;">()),</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// close current dev server</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">closeDevServer</span><span style="color:#D4D4D4;">(),</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ])</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// process onWatched hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pluginApi</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hooks</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onWatched</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">process</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">watchers</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">restart</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><ul><li>Also see: <ul><li><a href="#dev">Node API &gt; App Methods &gt; dev</a></li></ul></li></ul><h2 id="app-properties" tabindex="-1"><a class="header-anchor" href="#app-properties" aria-hidden="true">#</a> App Properties</h2><h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Version of VuePress app, i.e. version of <code>@vuepress/core</code> package.</p></li></ul><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p>Type: <code>AppOptions</code></p></li><li><p>Details:</p><p>Options of VuePress app.</p><p>The options come from the <code>config</code> argument in <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a>, while all optional fields will be filled with a default value.</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild" aria-hidden="true">#</a> env.isBuild</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the app is running in build mode, i.e. whether a <a href="#createbuildapp">BuildApp</a> instance.</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev" aria-hidden="true">#</a> env.isDev</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the app is running in dev mode, i.e. whether a <a href="#createdevapp">DevApp</a> instance.</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug" aria-hidden="true">#</a> env.isDebug</h3><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Environment flag used to identify whether the debug mode is enabled.</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata" aria-hidden="true">#</a> siteData</h3>',29),c=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"SiteData")])],-1),d=(0,a._)("p",null,"Details:",-1),D=(0,a.Uk)("Site data that set by user, including all the "),u=(0,a.Uk)("site config"),h=(0,a.Uk)(", which will be used in client side."),y=(0,a._)("h3",{id:"markdown",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#markdown","aria-hidden":"true"},"#"),(0,a.Uk)(" markdown")],-1),m=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"MarkdownIt")])],-1),b=(0,a._)("p",null,"Details:",-1),g=(0,a._)("p",null,[(0,a.Uk)("The "),(0,a._)("a",{href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},"markdown-it"),(0,a.Uk)(" instance used for parsing markdown content.")],-1),f=(0,a.Uk)("It is only available in and after "),C=(0,a.Uk)("onInitialized"),v=(0,a.Uk)(" hook."),A=(0,a._)("h3",{id:"layouts",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#layouts","aria-hidden":"true"},"#"),(0,a.Uk)(" layouts")],-1),k=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"Record<string, string>")])],-1),E=(0,a._)("p",null,"Details:",-1),w=(0,a._)("p",null,"The layout components map, of which the key is the layout name, the value is the absolute file path of the layout component.",-1),_=(0,a.Uk)("It is only available in and after "),x=(0,a.Uk)("onInitialized"),P=(0,a.Uk)(" hook."),F=(0,a._)("h3",{id:"pages",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pages","aria-hidden":"true"},"#"),(0,a.Uk)(" pages")],-1),T=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"Page[]")])],-1),B=(0,a._)("p",null,"Details:",-1),I=(0,a._)("p",null,[(0,a.Uk)("The "),(0,a._)("a",{href:"#page"},"Page"),(0,a.Uk)(" object array.")],-1),U=(0,a.Uk)("It is only available in and after "),R=(0,a.Uk)("onInitialized"),S=(0,a.Uk)(" hook."),L=(0,a.uE)('<h2 id="app-methods" tabindex="-1"><a class="header-anchor" href="#app-methods" aria-hidden="true">#</a> App Methods</h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir" aria-hidden="true">#</a> dir</h3><ul><li><p>Utils:</p><ul><li><code>dir.cache()</code>: resolve to cache directory</li><li><code>dir.temp()</code>: resolve to temp directory</li><li><code>dir.source()</code>: resolve to source directory</li><li><code>dir.dest()</code>: resolve to dest directory</li><li><code>dir.client()</code>: resolve to <code>@vuepress/client</code> directory</li><li><code>dir.public()</code>: resolve to public directory</li></ul></li><li><p>Signature:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppDirFunction</span><span style="color:#D4D4D4;"> = (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p>Details:</p><p>Utils to resolve the absolute file path in corresponding directory.</p><p>If you don&#39;t provide any arguments, it will return the absolute path of the directory.</p></li><li><p>Example:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// resolve the absolute file path of the `${sourceDir}/README.md`</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">homeSourceFile</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">dir</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;README.md&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp" aria-hidden="true">#</a> writeTemp</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">file</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>Filepath of the temp file that going to be wrote. Relative to temp directory.</td></tr><tr><td>content</td><td><code>string</code></td><td>Content of the temp file that going to be wrote.</td></tr></tbody></table><ul><li><p>Details:</p><p>A method to write temp file.</p><p>The written file could be imported via <code>@temp</code> alias in client files.</p></li><li><p>Example:</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// write temp file in onPrepared hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onPrepared</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">writeTemp</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo.js&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;export const foo = </span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">bar</span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// import temp file in client code</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@temp/foo&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> init</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',17),M=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Initialize VuePress app.")],-1),z=(0,a._)("p",null,"Also see:",-1),W=(0,a.Uk)("Advanced > Architecture > Core Process and Hooks"),H=(0,a.uE)('<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare" aria-hidden="true">#</a> prepare</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">prepare</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),N=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Prepare client temp files.")],-1),V=(0,a._)("p",null,"Also see:",-1),j=(0,a.Uk)("Advanced > Architecture > Core Process and Hooks"),O=(0,a.uE)('<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> build</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),G=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Generate static site files."),(0,a._)("p",null,[(0,a.Uk)("This method is only available in "),(0,a._)("code",null,"BuildApp"),(0,a.Uk)(".")])],-1),q=(0,a._)("p",null,"Also see:",-1),$=(0,a._)("li",null,[(0,a._)("a",{href:"#createbuildapp"},"Node API > App > createBuildApp")],-1),Y=(0,a.Uk)("Advanced > Architecture > Core Process and Hooks"),Z=(0,a.uE)('<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> dev</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">dev</span><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">void</span><span style="color:#D4D4D4;">&gt;&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),J=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Start dev server."),(0,a._)("p",null,[(0,a.Uk)("This method is only available in "),(0,a._)("code",null,"DevApp"),(0,a.Uk)(".")])],-1),K=(0,a._)("p",null,"Also see:",-1),Q=(0,a._)("li",null,[(0,a._)("a",{href:"#createdevapp"},"Node API > App > createDevApp")],-1),X=(0,a.Uk)("Advanced > Architecture > Core Process and Hooks"),nn=(0,a.uE)('<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h2><h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage" aria-hidden="true">#</a> createPage</h3><ul><li>Signature:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">App</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageOptions</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Page</span><span style="color:#D4D4D4;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Parameters:</li></ul><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>The VuePress app instance.</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>Options to create VuePress page.</td></tr></tbody></table><ul><li><p>Details:</p><p>Create a VuePress page object.</p></li><li><p>Example:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">createPage</span><span style="color:#D4D4D4;"> } = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;@vuepress/core&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// create an extra page in onInitialized hook</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">onInitialized</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">createPage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">path:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;/foo.html&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">frontmatter:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">layout:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Layout&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">content:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">`</span><span style="color:#D7BA7D;">\\</span></span>\n<span class="line"><span style="color:#CE9178;"># Foo Page</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#CE9178;">Hello, world.</span></span>\n<span class="line"><span style="color:#CE9178;">`</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      })</span></span>\n<span class="line"><span style="color:#D4D4D4;">    )</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',8),en=(0,a.Uk)("Also see: "),sn=(0,a._)("li",null,[(0,a._)("a",{href:"#pages"},"Node API > App Properties > pages")],-1),an=(0,a.Uk)("Cookbook > Adding Extra Pages"),ln=(0,a._)("h2",{id:"page-properties",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#page-properties","aria-hidden":"true"},"#"),(0,a.Uk)(" Page Properties")],-1),pn=(0,a._)("h3",{id:"key",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#key","aria-hidden":"true"},"#"),(0,a.Uk)(" key")],-1),tn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string")])],-1),on=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Identifier of the page."),(0,a._)("p",null,[(0,a.Uk)("The page key would be used as the "),(0,a._)("a",{href:"https://next.router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},"name"),(0,a.Uk)(" of the page route.")])],-1),rn=(0,a._)("p",null,"Also see:",-1),cn=(0,a.Uk)("Built-in Components > Content"),dn=(0,a._)("h3",{id:"path",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),(0,a.Uk)(" path")],-1),Dn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string")])],-1),un=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Route path of the page.")],-1),hn=(0,a._)("p",null,"Also see:",-1),yn=(0,a.Uk)("Guide > Page > Routing"),mn=(0,a._)("li",null,[(0,a._)("a",{href:"#pathinferred"},"Node API > Page Properties > pathInferred")],-1),bn=(0,a._)("h3",{id:"title",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),(0,a.Uk)(" title")],-1),gn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string")])],-1),fn=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Title of the page.")],-1),Cn=(0,a._)("p",null,"Also see:",-1),vn=(0,a.Uk)("Frontmatter > title"),An=(0,a._)("h3",{id:"lang",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),(0,a.Uk)(" lang")],-1),kn=(0,a.uE)("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Language of the page.</p></li><li><p>Example:</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),En=(0,a._)("p",null,"Also see:",-1),wn=(0,a.Uk)("Frontmatter > lang"),_n=(0,a._)("h3",{id:"frontmatter",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),(0,a.Uk)(" frontmatter")],-1),xn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"PageFrontmatter")])],-1),Pn=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Frontmatter of the page.")],-1),Fn=(0,a._)("p",null,"Also see:",-1),Tn=(0,a.Uk)("Frontmatter"),Bn=(0,a.uE)('<h3 id="excerpt" tabindex="-1"><a class="header-anchor" href="#excerpt" aria-hidden="true">#</a> excerpt</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Excerpt of the page.</p><p>If a Markdown file contains a <code>&lt;!-- more --&gt;</code> comment, any content above the comment will be extracted and rendered as excerpt.</p><p>If you are building a custom theme for blogging, it would be helpful to generate a post list with excerpts.</p></li><li><p>Example:</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">Lines above </span><span style="color:#CE9178;">`&lt;!-- more --&gt;`</span><span style="color:#D4D4D4;"> comment would be used as excerpt.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">It&#39;s recommended to wrap the comment with empty lines to avoid rendering issue.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- more --&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">Lines below </span><span style="color:#CE9178;">`&lt;!-- more --&gt;`</span><span style="color:#D4D4D4;"> comment would not be used as excerpt.</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h3><ul><li>Type: <code>PageHeader[]</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">level</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">slug</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">children</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',6),In=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Headers of the page.")],-1),Un=(0,a._)("p",null,"Also see:",-1),Rn=(0,a.Uk)("Config > markdown.extractHeaders"),Sn=(0,a.uE)('<h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li>Type: <code>PageData</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageData</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">lang</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">frontmatter</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageFrontmatter</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">excerpt</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',3),Ln=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Data of the page."),(0,a._)("p",null,"Page data would be available in client side.")],-1),Mn=(0,a._)("p",null,"Also see:",-1),zn=(0,a.Uk)("Client API > usePageData"),Wn=(0,a.Uk)("Plugin API > extendsPage"),Hn=(0,a.uE)('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Raw content of the page.</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered" aria-hidden="true">#</a> contentRendered</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Rendered content of the page.</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date" aria-hidden="true">#</a> date</h3>',5),Nn=(0,a.uE)("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Date of the page, in &#39;yyyy-MM-dd&#39; format.</p></li><li><p>Example:</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>&#39;</li></ul></li>",3),Vn=(0,a._)("p",null,"Also see:",-1),jn=(0,a.Uk)("Frontmatter > date"),On=(0,a._)("h3",{id:"deps",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#deps","aria-hidden":"true"},"#"),(0,a.Uk)(" deps")],-1),Gn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string[]")])],-1),qn=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Dependencies of the page."),(0,a._)("p",null,[(0,a.Uk)("For example, if users import code snippet in the page, the absolute file path of the imported file would be added to "),(0,a._)("code",null,"deps"),(0,a.Uk)(".")])],-1),$n=(0,a._)("p",null,"Also see:",-1),Yn=(0,a.Uk)("Config > markdown.importCode"),Zn=(0,a._)("h3",{id:"hoistedtags",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#hoistedtags","aria-hidden":"true"},"#"),(0,a.Uk)(" hoistedTags")],-1),Jn=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string[]")])],-1),Kn=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Hoisted tags of the page.")],-1),Qn=(0,a._)("p",null,"Also see:",-1),Xn=(0,a.Uk)("Config > markdown.hoistTags"),ne=(0,a.uE)('<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h3><ul><li>Type: <code>MarkdownLink[]</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownLink</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">raw</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">relative</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">absolute</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p>Details:</p><p>Links of the page.</p></li></ul><h3 id="pathinferred" tabindex="-1"><a class="header-anchor" href="#pathinferred" aria-hidden="true">#</a> pathInferred</h3>',5),ee=(0,a.uE)('<li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Route path of the page that inferred from file path.</p><p>By default, the route path is inferred from the relative file path of the Markdown source file. However, users may explicitly set the route path, e.g. <a href="#permalink">permalink</a>, which would be used as the final route path of the page. So we keep the inferred path as a page property in case you may need it.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li><li><p>Example:</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),se=(0,a._)("p",null,"Also see:",-1),ae=(0,a.Uk)("Guide > Page > Routing"),le=(0,a._)("li",null,[(0,a._)("a",{href:"#path"},"Node API > Page Properties > path")],-1),pe=(0,a._)("h3",{id:"pathlocale",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#pathlocale","aria-hidden":"true"},"#"),(0,a.Uk)(" pathLocale")],-1),te=(0,a.uE)("<li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Locale prefix of the page route path.</p><p>It is inferred from the relative file path of the Markdown source file and the key of <code>locales</code> option in user config.</p></li><li><p>Example:</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),oe=(0,a._)("p",null,"Also see:",-1),re=(0,a.Uk)("Config > locales"),ie=(0,a._)("h3",{id:"permalink",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#permalink","aria-hidden":"true"},"#"),(0,a.Uk)(" permalink")],-1),ce=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"string | null")])],-1),de=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Permalink of the page.")],-1),De=(0,a._)("p",null,"Also see:",-1),ue=(0,a.Uk)("Frontmatter > permalink"),he=(0,a.Uk)("Frontmatter > permalinkPattern"),ye=(0,a._)("h3",{id:"routemeta",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),(0,a.Uk)(" routeMeta")],-1),me=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("Type: "),(0,a._)("code",null,"Record<string, unknown>")])],-1),be=(0,a._)("li",null,[(0,a._)("p",null,"Details:"),(0,a._)("p",null,"Custom data to be attached to the route record of vue-router.")],-1),ge=(0,a._)("p",null,"Also see:",-1),fe=(0,a.Uk)("Frontmatter > routeMeta"),Ce=(0,a._)("li",null,[(0,a._)("a",{href:"https://next.router.vuejs.org/api/#meta",target:"_blank",rel:"noopener noreferrer"},"vue-router > API Reference > RouteRecordRaw > meta")],-1),ve=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">What&#39;s the difference between route meta and page data?</p><p>Both <a href="#routemeta">route meta</a> and <a href="#data">page data</a> is available in client side. However, route meta is attached to the route record, so the route meta of all pages would be loaded at once when users enter your site. In the contrast, page data is saved in separated files, which would be loaded only when users enter the corresponding page.</p><p>Therefore, it&#39;s not recommended to store large amounts of info into route meta, otherwise the initial loading speed will be affected a lot when your site has a large number of pages.</p></div><h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug" aria-hidden="true">#</a> slug</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Slug of the page.</p><p>It is inferred from the filename of the Markdown source file.</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath" aria-hidden="true">#</a> filePath</h3><ul><li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Absolute path of the Markdown source file of the page.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative" aria-hidden="true">#</a> filePathRelative</h3><ul><li><p>Type: <code>string | null</code></p></li><li><p>Details:</p><p>Relative path of the Markdown source file of the page.</p><p>It would be <code>null</code> if the page does not come from a Markdown source file.</p></li></ul>',7),Ae={},ke=(0,s(83744).Z)(Ae,[["render",function(n,e){const s=(0,a.up)("NpmBadge"),Ae=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,(0,a.Wm)(s,{package:"@vuepress/core"}),p,(0,a._)("p",null,[t,(0,a.Wm)(Ae,{to:"/vuepress-next/reference/plugin-api.html"},{default:(0,a.w5)((()=>[o])),_:1}),r]),i,(0,a._)("ul",null,[c,(0,a._)("li",null,[d,(0,a._)("p",null,[D,(0,a.Wm)(Ae,{to:"/vuepress-next/reference/config.html#site-config"},{default:(0,a.w5)((()=>[u])),_:1}),h])])]),y,(0,a._)("ul",null,[m,(0,a._)("li",null,[b,g,(0,a._)("p",null,[f,(0,a.Wm)(Ae,{to:"/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[C])),_:1}),v])])]),A,(0,a._)("ul",null,[k,(0,a._)("li",null,[E,w,(0,a._)("p",null,[_,(0,a.Wm)(Ae,{to:"/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[x])),_:1}),P])])]),F,(0,a._)("ul",null,[T,(0,a._)("li",null,[B,I,(0,a._)("p",null,[U,(0,a.Wm)(Ae,{to:"/vuepress-next/reference/plugin-api.html#oninitialized"},{default:(0,a.w5)((()=>[R])),_:1}),S])])]),L,(0,a._)("ul",null,[M,(0,a._)("li",null,[z,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/advanced/architecture.html#core-process-and-hooks"},{default:(0,a.w5)((()=>[W])),_:1})])])])]),H,(0,a._)("ul",null,[N,(0,a._)("li",null,[V,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/advanced/architecture.html#core-process-and-hooks"},{default:(0,a.w5)((()=>[j])),_:1})])])])]),O,(0,a._)("ul",null,[G,(0,a._)("li",null,[q,(0,a._)("ul",null,[$,(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/advanced/architecture.html#core-process-and-hooks"},{default:(0,a.w5)((()=>[Y])),_:1})])])])]),Z,(0,a._)("ul",null,[J,(0,a._)("li",null,[K,(0,a._)("ul",null,[Q,(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/advanced/architecture.html#core-process-and-hooks"},{default:(0,a.w5)((()=>[X])),_:1})])])])]),nn,(0,a._)("ul",null,[(0,a._)("li",null,[en,(0,a._)("ul",null,[sn,(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/advanced/cookbook/adding-extra-pages.html"},{default:(0,a.w5)((()=>[an])),_:1})])])])]),ln,pn,(0,a._)("ul",null,[tn,on,(0,a._)("li",null,[rn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/components.html#content"},{default:(0,a.w5)((()=>[cn])),_:1})])])])]),dn,(0,a._)("ul",null,[Dn,un,(0,a._)("li",null,[hn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/guide/page.html#routing"},{default:(0,a.w5)((()=>[yn])),_:1})]),mn])])]),bn,(0,a._)("ul",null,[gn,fn,(0,a._)("li",null,[Cn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#title"},{default:(0,a.w5)((()=>[vn])),_:1})])])])]),An,(0,a._)("ul",null,[kn,(0,a._)("li",null,[En,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#title"},{default:(0,a.w5)((()=>[wn])),_:1})])])])]),_n,(0,a._)("ul",null,[xn,Pn,(0,a._)("li",null,[Fn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html"},{default:(0,a.w5)((()=>[Tn])),_:1})])])])]),Bn,(0,a._)("ul",null,[In,(0,a._)("li",null,[Un,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/config.html#markdown-extractheaders"},{default:(0,a.w5)((()=>[Rn])),_:1})])])])]),Sn,(0,a._)("ul",null,[Ln,(0,a._)("li",null,[Mn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/client-api.html#usepagedata"},{default:(0,a.w5)((()=>[zn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/plugin-api.html#extendspage"},{default:(0,a.w5)((()=>[Wn])),_:1})])])])]),Hn,(0,a._)("ul",null,[Nn,(0,a._)("li",null,[Vn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#date"},{default:(0,a.w5)((()=>[jn])),_:1})])])])]),On,(0,a._)("ul",null,[Gn,qn,(0,a._)("li",null,[$n,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/config.html#markdown-importcode"},{default:(0,a.w5)((()=>[Yn])),_:1})])])])]),Zn,(0,a._)("ul",null,[Jn,Kn,(0,a._)("li",null,[Qn,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/config.html#markdown-hoisttags"},{default:(0,a.w5)((()=>[Xn])),_:1})])])])]),ne,(0,a._)("ul",null,[ee,(0,a._)("li",null,[se,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/guide/page.html#routing"},{default:(0,a.w5)((()=>[ae])),_:1})]),le])])]),pe,(0,a._)("ul",null,[te,(0,a._)("li",null,[oe,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/config.html#locales"},{default:(0,a.w5)((()=>[re])),_:1})])])])]),ie,(0,a._)("ul",null,[ce,de,(0,a._)("li",null,[De,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#permalink"},{default:(0,a.w5)((()=>[ue])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#permalinkpattern"},{default:(0,a.w5)((()=>[he])),_:1})])])])]),ye,(0,a._)("ul",null,[me,be,(0,a._)("li",null,[ge,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(Ae,{to:"/vuepress-next/reference/frontmatter.html#routemeta"},{default:(0,a.w5)((()=>[fe])),_:1})]),Ce])])]),ve],64)}]])}}]);