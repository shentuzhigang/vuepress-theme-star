"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5047],{6882:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-24289435",path:"/zh/vuepress-next/reference/plugin/toc.html",title:"toc",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"与 Markdown 目录语法的区别",slug:"与-markdown-目录语法的区别",children:[]},{level:2,title:"配置项",slug:"配置项",children:[{level:3,title:"componentName",slug:"componentname",children:[]},{level:3,title:"defaultPropsOptions",slug:"defaultpropsoptions",children:[]}]},{level:2,title:"组件 Props",slug:"组件-props",children:[{level:3,title:"headers",slug:"headers",children:[]},{level:3,title:"options",slug:"options",children:[]}]}],git:{updatedTime:1635758933e3,contributors:[{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:2.02,words:607},filePathRelative:"zh/vuepress-next/reference/plugin/toc.md",content:'# toc\n\n<NpmBadge package="@vuepress/plugin-toc" />\n\n该插件会提供一个目录 (table-of-contents, TOC) 组件。\n\n## 安装\n\n```bash\nnpm i -D @vuepress/plugin-toc@next\n```\n\n## 与 Markdown 目录语法的区别\n\n与 [Markdown 目录语法](../../guide/markdown.md#目录) 类似，该插件提供的目录组件可以直接在你的 Markdown 内容中使用：\n\n```md\n\x3c!-- Markdown 目录语法 --\x3e\n[[toc]]\n\n\x3c!-- Vue 目录组件 --\x3e\n<Toc />\n```\n\n在 Build 模式中，它们都可以被正确地预渲染。然而，它们之间存在一些区别。\n\nMarkdown 语法 `[[toc]]` 仅能在 Markdown 文件中使用。它是由 markdown-it 解析的，生成的目录是静态内容。\n\n组件 `<Toc/>` 既可以用在 Markdown 文件中，也可以用在 Vue 文件中。它是由 Vue 加载的，生成的目录是一个 Vue 组件。\n\n该插件可以和 [@vuepress/plugin-active-header-links](./active-header-links.md) 协同工作，你只需要将 [headerLinkSelector](./active-header-links.md#headerlinkselector) 与该插件的 `linkClass` 匹配即可。当页面滚动至某个标题锚点后，对应的链接就会被加上 `linkActiveClass` 类名。\n\n因此，该插件对于主题开发者来说更为有用。\n\n## 配置项\n\n### componentName\n\n- 类型： `string`\n\n- 默认值： `Toc`\n\n- 详情：\n\n  指定目录组件的名称。\n\n### defaultPropsOptions\n\n- 类型： `Partial<TocPropsOptions>`\n\n- 默认值： `{}`\n\n- 详情：\n\n  覆盖组件 [options](#options) Prop 的默认值。\n\n## 组件 Props\n\n目录组件可以通过 Props 来进行自定义。\n\n```vue\n<template>\n  <Toc :headers="headers" :options="options" />\n</template>\n```\n\n### headers\n\n- 类型： `PageHeader[]`\n\n```ts\ninterface PageHeader {\n  level: number\n  title: string\n  slug: string\n  children: PageHeader[]\n}\n```\n\n- 详情：\n\n  指定要渲染的标题数组。\n\n  如果该 Prop 没有被设置，默认会使用当前页面的标题。\n\n### options\n\n- 类型： `Partial<TocPropsOptions>`\n\n```ts\ninterface TocPropsOptions {\n  containerTag: string\n  containerClass: string\n  listClass: string\n  itemClass: string\n  linkTag: \'a\' | \'RouterLink\'\n  linkClass: string\n  linkActiveClass: string\n  linkChildrenActiveClass: string\n}\n```\n\n- 默认值：\n\n  下列默认值可以用过 [defaultPropsOptions](#defaultpropsoptions) 来覆盖：\n\n```ts\nconst defaultOptions = {\n  containerTag: \'nav\',\n  containerClass: \'vuepress-toc\',\n  listClass: \'vuepress-toc-list\',\n  itemClass: \'vuepress-toc-item\',\n  linkTag: \'RouterLink\',\n  linkClass: \'vuepress-toc-link\',\n  linkActiveClass: \'active\',\n  linkChildrenActiveClass: \'active\',\n}\n```\n\n- 详情：\n\n  自定义目录组件。\n\n  如果 `containerTag` 设置为空字符串 `\'\'` ，那么最外层的 `<nav>` Container 会被完全移除。\n\n- 示例：\n\n  使用默认 options 的目录组件的渲染结果类似以下结构：\n\n```vue\n<template>\n  \x3c!-- container --\x3e\n  <nav class="vuepress-toc">\n    \x3c!-- list --\x3e\n    <ul class="vuepress-toc-list">\n      \x3c!-- item --\x3e\n      <li class="vuepress-toc-item">\n        \x3c!-- link --\x3e\n        <RouterLink class="vuepress-toc-link" to="#foo">Foo</RouterLink>\n      </li>\n      \x3c!-- item with children --\x3e\n      <li class="vuepress-toc-item">\n        \x3c!-- link (children active) --\x3e\n        <RouterLink class="vuepress-toc-link active" to="#bar">Bar</RouterLink>\n        \x3c!-- list (children) --\x3e\n        <ul class="vuepress-toc-list">\n          \x3c!-- item --\x3e\n          <li class="vuepress-toc-item">\n            \x3c!-- link (active) --\x3e\n            <RouterLink class="vuepress-toc-link active" to="#bar-child">Bar Child</RouterLink>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</template>\n```\n'}},9258:(s,n,a)=>{a.r(n),a.d(n,{default:()=>k});var l=a(66252);const e=(0,l._)("h1",{id:"toc",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#toc","aria-hidden":"true"},"#"),(0,l.Uk)(" toc")],-1),p=(0,l.uE)('<p>该插件会提供一个目录 (table-of-contents, TOC) 组件。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-toc@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="与-markdown-目录语法的区别" tabindex="-1"><a class="header-anchor" href="#与-markdown-目录语法的区别" aria-hidden="true">#</a> 与 Markdown 目录语法的区别</h2>',4),o=(0,l.Uk)("与 "),t=(0,l.Uk)("Markdown 目录语法"),r=(0,l.Uk)(" 类似，该插件提供的目录组件可以直接在你的 Markdown 内容中使用："),c=(0,l.uE)('<div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- Markdown 目录语法 --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">[toc</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- Vue 目录组件 --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;Toc /&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在 Build 模式中，它们都可以被正确地预渲染。然而，它们之间存在一些区别。</p><p>Markdown 语法 <code>[[toc]]</code> 仅能在 Markdown 文件中使用。它是由 markdown-it 解析的，生成的目录是静态内容。</p><p>组件 <code>&lt;Toc/&gt;</code> 既可以用在 Markdown 文件中，也可以用在 Vue 文件中。它是由 Vue 加载的，生成的目录是一个 Vue 组件。</p>',4),i=(0,l.Uk)("该插件可以和 "),D=(0,l.Uk)("@vuepress/plugin-active-header-links"),y=(0,l.Uk)(" 协同工作，你只需要将 "),u=(0,l.Uk)("headerLinkSelector"),d=(0,l.Uk)(" 与该插件的 "),C=(0,l._)("code",null,"linkClass",-1),b=(0,l.Uk)(" 匹配即可。当页面滚动至某个标题锚点后，对应的链接就会被加上 "),m=(0,l._)("code",null,"linkActiveClass",-1),h=(0,l.Uk)(" 类名。"),g=(0,l.uE)('<p>因此，该插件对于主题开发者来说更为有用。</p><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h2><h3 id="componentname" tabindex="-1"><a class="header-anchor" href="#componentname" aria-hidden="true">#</a> componentName</h3><ul><li><p>类型： <code>string</code></p></li><li><p>默认值： <code>Toc</code></p></li><li><p>详情：</p><p>指定目录组件的名称。</p></li></ul><h3 id="defaultpropsoptions" tabindex="-1"><a class="header-anchor" href="#defaultpropsoptions" aria-hidden="true">#</a> defaultPropsOptions</h3><ul><li><p>类型： <code>Partial&lt;TocPropsOptions&gt;</code></p></li><li><p>默认值： <code>{}</code></p></li><li><p>详情：</p><p>覆盖组件 <a href="#options">options</a> Prop 的默认值。</p></li></ul><h2 id="组件-props" tabindex="-1"><a class="header-anchor" href="#组件-props" aria-hidden="true">#</a> 组件 Props</h2><p>目录组件可以通过 Props 来进行自定义。</p><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">Toc</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h3><ul><li>类型： <code>PageHeader[]</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">level</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">slug</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">children</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">PageHeader</span><span style="color:#D4D4D4;">[]</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p>详情：</p><p>指定要渲染的标题数组。</p><p>如果该 Prop 没有被设置，默认会使用当前页面的标题。</p></li></ul><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li>类型： <code>Partial&lt;TocPropsOptions&gt;</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">TocPropsOptions</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">containerTag</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">containerClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">listClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">itemClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkTag</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;RouterLink&#39;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkActiveClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkChildrenActiveClass</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><p>默认值：</p><p>下列默认值可以用过 <a href="#defaultpropsoptions">defaultPropsOptions</a> 来覆盖：</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">defaultOptions</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">containerTag:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;nav&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">containerClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vuepress-toc&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">listClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vuepress-toc-list&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">itemClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vuepress-toc-item&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkTag:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;RouterLink&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vuepress-toc-link&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkActiveClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;active&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">linkChildrenActiveClass:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;active&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><p>详情：</p><p>自定义目录组件。</p><p>如果 <code>containerTag</code> 设置为空字符串 <code>&#39;&#39;</code> ，那么最外层的 <code>&lt;nav&gt;</code> Container 会被完全移除。</p></li><li><p>示例：</p><p>使用默认 options 的目录组件的渲染结果类似以下结构：</p></li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">&lt;!-- container --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">nav</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">&lt;!-- list --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">ul</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-list&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">&lt;!-- item --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">li</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-item&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">&lt;!-- link --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-link&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#foo&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Foo</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">&lt;!-- item with children --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">li</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-item&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">&lt;!-- link (children active) --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-link active&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#bar&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Bar</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">&lt;!-- list (children) --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">ul</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-list&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#6A9955;">&lt;!-- item --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">li</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-item&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">&lt;!-- link (active) --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;vuepress-toc-link active&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#bar-child&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Bar Child</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">nav</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>',20),v={},k=(0,a(83744).Z)(v,[["render",function(s,n){const a=(0,l.up)("NpmBadge"),v=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[e,(0,l.Wm)(a,{package:"@vuepress/plugin-toc"}),p,(0,l._)("p",null,[o,(0,l.Wm)(v,{to:"/zh/vuepress-next/guide/markdown.html#%E7%9B%AE%E5%BD%95"},{default:(0,l.w5)((()=>[t])),_:1}),r]),c,(0,l._)("p",null,[i,(0,l.Wm)(v,{to:"/zh/vuepress-next/reference/plugin/active-header-links.html"},{default:(0,l.w5)((()=>[D])),_:1}),y,(0,l.Wm)(v,{to:"/zh/vuepress-next/reference/plugin/active-header-links.html#headerlinkselector"},{default:(0,l.w5)((()=>[u])),_:1}),d,C,b,m,h]),g],64)}]])}}]);