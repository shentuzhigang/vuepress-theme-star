"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[324],{53314:(n,l,e)=>{e.r(l),e.d(l,{data:()=>a});const a={key:"v-3ed8eda7",path:"/zh/vuepress-next/reference/frontmatter.html",title:"Frontmatter",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"date",slug:"date",children:[]},{level:2,title:"description",slug:"description",children:[]},{level:2,title:"head",slug:"head",children:[]},{level:2,title:"lang",slug:"lang",children:[]},{level:2,title:"layout",slug:"layout",children:[]},{level:2,title:"permalink",slug:"permalink",children:[]},{level:2,title:"permalinkPattern",slug:"permalinkpattern",children:[]},{level:2,title:"routeMeta",slug:"routemeta",children:[]},{level:2,title:"title",slug:"title",children:[]}],git:{updatedTime:1639839959e3,contributors:[{name:"Starzkg",email:"1600337300@qq.com",commits:1},{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:2.42,words:727},filePathRelative:"zh/vuepress-next/reference/frontmatter.md",content:'# Frontmatter\n\n<NpmBadge package="@vuepress/client" />\n<NpmBadge package="@vuepress/markdown" />\n\n## date\n\n- 类型： `string`\n\n- 详情：\n\n  页面的创建日期。\n\n  应按照 `yyyy-MM-dd` 的格式来指定日期，或者遵循 [YAML Timestamp Type](https://yaml.org/type/timestamp.html) 。\n\n- 参考：\n  - [Node API > Page 属性 > date](./node-api.md#date)\n\n## description\n\n- 类型： `string`\n\n- 详情：\n\n  页面的描述。\n\n  它将会覆盖站点配置中的 `description` 配置项\n\n- 参考：\n  - [配置 > description](./config.md#description)\n\n## head\n\n- 类型： `HeadConfig[]`\n\n- 详情：\n\n  页面 `<head>` 标签内添加的额外标签。\n\n- 示例：\n\n```md\n---\nhead:\n  - - meta\n    - name: foo\n      content: bar\n  - - link\n    - rel: canonical\n      href: foobar\n---\n```\n\n  渲染为：\n\n```html\n<head>\n  <meta name="foo" content="bar" />\n  <link rel="canonical" href="foobar" />\n</head>\n```\n\n- 参考：\n  - [配置 > head](./config.md#head)\n\n## lang\n\n- 类型： `string`\n\n- 详情：\n\n  页面的语言。\n\n  它将会覆盖站点配置中的 `lang` 配置项\n\n- 参考：\n  - [配置 > lang](./config.md#lang)\n  - [Node API > Page 属性 > lang](./node-api.md#lang)\n\n## layout\n\n- 类型： `string`\n\n- 详情：\n\n  页面的布局。\n\n  布局是由主题提供的。如果你不指定该 Frontmatter ，则会使用默认布局。你应该参考主题自身的文档来了解其提供了哪些布局。\n\n  如果主题布局无法满足你的需求，你可以使用自定义布局组件。\n\n- 示例：\n\n在 `.vuepress/clientAppEnhance.ts` 文件中注册一个布局组件：\n\n```ts\nimport { defineClientAppEnhance } from \'@vuepress/client\'\nimport CustomLayout from \'./CustomLayout.vue\'\n\nexport default defineClientAppEnhance(({ app }) => {\n  app.component(\'CustomLayout\', CustomLayout)\n})\n```\n\n在 Frontmatter 中设置自定义布局：\n\n```md\n---\nlayout: CustomLayout\n---\n```\n\n## permalink\n\n- 类型： `string`\n\n- 详情：\n\n  页面的永久链接。\n\n  它将会覆盖根据文件路径来决定的默认路由路径。\n\n- 参考：\n  - [Frontmatter > permalinkPattern](#permalinkpattern)\n  - [指南 > 页面 > 路由](../guide/page.md#路由)\n  - [Node API > Page 属性 > permalink](./node-api.md#permalink)\n\n## permalinkPattern\n\n- 类型： `string`\n\n- 详情：\n\n  为页面生成永久链接的 Pattern 。\n\n  如果 Frontmatter 中设置了 `permalink` ，那么这个字段则不会生效。\n\n- 使用：\n\n  |  Pattern  |       描述        |\n  |-----------|-------------------|\n  | `:year`   | 创建日期的 年 部分 |\n  | `:month`  | 创建日期的 月 部分 |\n  | `:day`    | 创建日期的 日 部分 |\n  | `:slug`   | 页面文件名的 Slug  |\n  | `:raw`    | 原始路由路径       |\n\n  `:year`, `:month` 和 `:day` Pattern 根据如下优先级进行解析：\n\n  - Frontmatter 中的 `date` 字段。\n  - 符合 `yyyy-MM-dd-foobar.md` 或 `yyyy-MM-foobar.md` 日期格式的文件名。\n  - 符合 `yyyy/MM/dd/foobar.md` 或 `yyyy/MM/foobar.md` 日期格式的目录名。\n  - 默认值 `0000-00-00` 。\n\n- 示例 1 ：\n\n  页面文件名是 `foo-bar.md` 。\n\n  页面 Frontmatter 是：\n\n```md\n---\ndate: 2021-01-03\npermalinkPattern: :year/:month/:day/:slug.html\n---\n```\n\n  那么页面的永久链接将会是 `2021/01/03/foo-bar.html` 。\n\n- 示例 2 ：\n\n  页面文件名是 `2021-01-03-bar-baz.md`。\n\n  页面 Frontmatter 是：\n\n```md\n---\npermalinkPattern: :year/:month/:day/:slug.html\n---\n```\n\n  那么页面的永久链接将会是 `2021/01/03/bar-baz.html` 。\n\n- 参考：\n  - [Frontmatter > date](#date)\n  - [Frontmatter > permalink](#permalink)\n  - [Node API > Page 属性 > permalink](./node-api.md#permalink)\n\n## routeMeta\n\n- 类型： `Record<string, unknown>`\n\n- 详情：\n\n  附加到页面路由的自定义数据。\n\n- 参考：\n  - [Node API > Page 属性 > routeMeta](./node-api.md#routeMeta)\n\n## title\n\n- 类型： `string`\n\n- 详情：\n\n  页面的标题。\n\n  如果你不在 Frontmatter 中设置 `title` ，那么页面中第一个一级标题（即 `# title`）的内容会被当作标题使用。\n\n- 参考：\n  - [Node API > Page 属性 > title](./node-api.md#title)\n'}},4137:(n,l,e)=>{e.r(l),e.d(l,{default:()=>J});var a=e(66252);const s=(0,a._)("h1",{id:"frontmatter",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#frontmatter","aria-hidden":"true"},"#"),(0,a.Uk)(" Frontmatter")],-1),t=(0,a._)("h2",{id:"date",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#date","aria-hidden":"true"},"#"),(0,a.Uk)(" date")],-1),p=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),r=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"页面的创建日期。"),(0,a._)("p",null,[(0,a.Uk)("应按照 "),(0,a._)("code",null,"yyyy-MM-dd"),(0,a.Uk)(" 的格式来指定日期，或者遵循 "),(0,a._)("a",{href:"https://yaml.org/type/timestamp.html",target:"_blank",rel:"noopener noreferrer"},"YAML Timestamp Type"),(0,a.Uk)(" 。")])],-1),o=(0,a._)("p",null,"参考：",-1),i=(0,a.Uk)("Node API > Page 属性 > date"),c=(0,a._)("h2",{id:"description",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),(0,a.Uk)(" description")],-1),d=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),u=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"页面的描述。"),(0,a._)("p",null,[(0,a.Uk)("它将会覆盖站点配置中的 "),(0,a._)("code",null,"description"),(0,a.Uk)(" 配置项")])],-1),m=(0,a._)("p",null,"参考：",-1),y=(0,a.Uk)("配置 > description"),D=(0,a.uE)('<h2 id="head" tabindex="-1"><a class="header-anchor" href="#head" aria-hidden="true">#</a> head</h2><ul><li><p>类型： <code>HeadConfig[]</code></p></li><li><p>详情：</p><p>页面 <code>&lt;head&gt;</code> 标签内添加的额外标签。</p></li><li><p>示例：</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"><span style="color:#569CD6;">head</span><span style="color:#D4D4D4;">:</span></span>\n<span class="line"><span style="color:#D4D4D4;">  - - </span><span style="color:#CE9178;">meta</span></span>\n<span class="line"><span style="color:#D4D4D4;">    - </span><span style="color:#569CD6;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">foo</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">content</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">bar</span></span>\n<span class="line"><span style="color:#D4D4D4;">  - - </span><span style="color:#CE9178;">link</span></span>\n<span class="line"><span style="color:#D4D4D4;">    - </span><span style="color:#569CD6;">rel</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">canonical</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">href</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">foobar</span></span>\n<span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>渲染为：</p><div class="language-html ext-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">meta</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;foo&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;bar&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">link</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;canonical&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;foobar&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',5),h=(0,a.Uk)("参考： "),b=(0,a.Uk)("配置 > head"),g=(0,a._)("h2",{id:"lang",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#lang","aria-hidden":"true"},"#"),(0,a.Uk)(" lang")],-1),_=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),k=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"页面的语言。"),(0,a._)("p",null,[(0,a.Uk)("它将会覆盖站点配置中的 "),(0,a._)("code",null,"lang"),(0,a.Uk)(" 配置项")])],-1),f=(0,a._)("p",null,"参考：",-1),C=(0,a.Uk)("配置 > lang"),v=(0,a.Uk)("Node API > Page 属性 > lang"),E=(0,a.uE)('<h2 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> layout</h2><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>页面的布局。</p><p>布局是由主题提供的。如果你不指定该 Frontmatter ，则会使用默认布局。你应该参考主题自身的文档来了解其提供了哪些布局。</p><p>如果主题布局无法满足你的需求，你可以使用自定义布局组件。</p></li><li><p>示例：</p></li></ul><p>在 <code>.vuepress/clientAppEnhance.ts</code> 文件中注册一个布局组件：</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineClientAppEnhance</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/client&#39;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">CustomLayout</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;./CustomLayout.vue&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">defineClientAppEnhance</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">component</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;CustomLayout&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">CustomLayout</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">})</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在 Frontmatter 中设置自定义布局：</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"><span style="color:#569CD6;">layout</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">CustomLayout</span></span>\n<span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="permalink" tabindex="-1"><a class="header-anchor" href="#permalink" aria-hidden="true">#</a> permalink</h2>',7),P=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),U=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"页面的永久链接。"),(0,a._)("p",null,"它将会覆盖根据文件路径来决定的默认路由路径。")],-1),F=(0,a._)("p",null,"参考：",-1),x=(0,a._)("li",null,[(0,a._)("a",{href:"#permalinkpattern"},"Frontmatter > permalinkPattern")],-1),M=(0,a.Uk)("指南 > 页面 > 路由"),A=(0,a.Uk)("Node API > Page 属性 > permalink"),w=(0,a.uE)('<h2 id="permalinkpattern" tabindex="-1"><a class="header-anchor" href="#permalinkpattern" aria-hidden="true">#</a> permalinkPattern</h2><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>为页面生成永久链接的 Pattern 。</p><p>如果 Frontmatter 中设置了 <code>permalink</code> ，那么这个字段则不会生效。</p></li><li><p>使用：</p><table><thead><tr><th>Pattern</th><th>描述</th></tr></thead><tbody><tr><td><code>:year</code></td><td>创建日期的 年 部分</td></tr><tr><td><code>:month</code></td><td>创建日期的 月 部分</td></tr><tr><td><code>:day</code></td><td>创建日期的 日 部分</td></tr><tr><td><code>:slug</code></td><td>页面文件名的 Slug</td></tr><tr><td><code>:raw</code></td><td>原始路由路径</td></tr></tbody></table><p><code>:year</code>, <code>:month</code> 和 <code>:day</code> Pattern 根据如下优先级进行解析：</p><ul><li>Frontmatter 中的 <code>date</code> 字段。</li><li>符合 <code>yyyy-MM-dd-foobar.md</code> 或 <code>yyyy-MM-foobar.md</code> 日期格式的文件名。</li><li>符合 <code>yyyy/MM/dd/foobar.md</code> 或 <code>yyyy/MM/foobar.md</code> 日期格式的目录名。</li><li>默认值 <code>0000-00-00</code> 。</li></ul></li><li><p>示例 1 ：</p><p>页面文件名是 <code>foo-bar.md</code> 。</p><p>页面 Frontmatter 是：</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"><span style="color:#569CD6;">date</span><span style="color:#D4D4D4;">: 2021-01-03</span></span>\n<span class="line"><span style="color:#569CD6;">permalinkPattern</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">:year/:month/:day/:slug.html</span></span>\n<span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>那么页面的永久链接将会是 <code>2021/01/03/foo-bar.html</code> 。</p><ul><li><p>示例 2 ：</p><p>页面文件名是 <code>2021-01-03-bar-baz.md</code>。</p><p>页面 Frontmatter 是：</p></li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"><span style="color:#569CD6;">permalinkPattern</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">:year/:month/:day/:slug.html</span></span>\n<span class="line"><span style="color:#D4D4D4;">---</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>那么页面的永久链接将会是 <code>2021/01/03/bar-baz.html</code> 。</p>',7),z=(0,a.Uk)("参考： "),N=(0,a._)("li",null,[(0,a._)("a",{href:"#date"},"Frontmatter > date")],-1),L=(0,a._)("li",null,[(0,a._)("a",{href:"#permalink"},"Frontmatter > permalink")],-1),I=(0,a.Uk)("Node API > Page 属性 > permalink"),W=(0,a._)("h2",{id:"routemeta",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#routemeta","aria-hidden":"true"},"#"),(0,a.Uk)(" routeMeta")],-1),q=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"Record<string, unknown>")])],-1),T=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"附加到页面路由的自定义数据。")],-1),B=(0,a._)("p",null,"参考：",-1),R=(0,a.Uk)("Node API > Page 属性 > routeMeta"),H=(0,a._)("h2",{id:"title",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#title","aria-hidden":"true"},"#"),(0,a.Uk)(" title")],-1),S=(0,a._)("li",null,[(0,a._)("p",null,[(0,a.Uk)("类型： "),(0,a._)("code",null,"string")])],-1),Y=(0,a._)("li",null,[(0,a._)("p",null,"详情："),(0,a._)("p",null,"页面的标题。"),(0,a._)("p",null,[(0,a.Uk)("如果你不在 Frontmatter 中设置 "),(0,a._)("code",null,"title"),(0,a.Uk)(" ，那么页面中第一个一级标题（即 "),(0,a._)("code",null,"# title"),(0,a.Uk)("）的内容会被当作标题使用。")])],-1),Z=(0,a._)("p",null,"参考：",-1),j=(0,a.Uk)("Node API > Page 属性 > title"),G={},J=(0,e(83744).Z)(G,[["render",function(n,l){const e=(0,a.up)("NpmBadge"),G=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[s,(0,a.Wm)(e,{package:"@vuepress/client"}),(0,a.Wm)(e,{package:"@vuepress/markdown"}),t,(0,a._)("ul",null,[p,r,(0,a._)("li",null,[o,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#date"},{default:(0,a.w5)((()=>[i])),_:1})])])])]),c,(0,a._)("ul",null,[d,u,(0,a._)("li",null,[m,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/config.html#description"},{default:(0,a.w5)((()=>[y])),_:1})])])])]),D,(0,a._)("ul",null,[(0,a._)("li",null,[h,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/config.html#head"},{default:(0,a.w5)((()=>[b])),_:1})])])])]),g,(0,a._)("ul",null,[_,k,(0,a._)("li",null,[f,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/config.html#lang"},{default:(0,a.w5)((()=>[C])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#lang"},{default:(0,a.w5)((()=>[v])),_:1})])])])]),E,(0,a._)("ul",null,[P,U,(0,a._)("li",null,[F,(0,a._)("ul",null,[x,(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:(0,a.w5)((()=>[M])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#permalink"},{default:(0,a.w5)((()=>[A])),_:1})])])])]),w,(0,a._)("ul",null,[(0,a._)("li",null,[z,(0,a._)("ul",null,[N,L,(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#permalink"},{default:(0,a.w5)((()=>[I])),_:1})])])])]),W,(0,a._)("ul",null,[q,T,(0,a._)("li",null,[B,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#routeMeta"},{default:(0,a.w5)((()=>[R])),_:1})])])])]),H,(0,a._)("ul",null,[S,Y,(0,a._)("li",null,[Z,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(G,{to:"/zh/vuepress-next/reference/node-api.html#title"},{default:(0,a.w5)((()=>[j])),_:1})])])])])],64)}]])}}]);