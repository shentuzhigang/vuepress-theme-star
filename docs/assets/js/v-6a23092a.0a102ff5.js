"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6093],{97360:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-6a23092a",path:"/vuepress-next/reference/plugin/container.html",title:"container",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install",slug:"install",children:[]},{level:2,title:"Container Syntax",slug:"container-syntax",children:[]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"type",slug:"type",children:[]},{level:3,title:"locales",slug:"locales",children:[]},{level:3,title:"before",slug:"before",children:[]},{level:3,title:"after",slug:"after",children:[]},{level:3,title:"render",slug:"render",children:[]},{level:3,title:"validate",slug:"validate",children:[]},{level:3,title:"marker",slug:"marker",children:[]}]}],git:{updatedTime:1635758933e3,contributors:[{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:1.47,words:440},filePathRelative:"vuepress-next/reference/plugin/container.md",content:"# container\n\n<NpmBadge package=\"@vuepress/plugin-container\" />\n\nRegister markdown custom containers in your VuePress site.\n\nThis plugin simplifies the use of [markdown-it-container](https://github.com/markdown-it/markdown-it-container), but also retains its original capabilities.\n\nThe [Custom Containers](../default-theme/markdown.md#custom-containers) of default theme is powered by this plugin.\n\n## Install\n\n```bash\nnpm i -D @vuepress/plugin-container@next\n```\n\n## Container Syntax\n\n```md\n::: <type> [info]\n[content]\n:::\n```\n\n- The `type` is required and should be specified via [type](#type) option.\n- The `info` is optional, and the default value can be specified via `defaultInfo` in [locales](#locales) option.\n- The `content` can be any valid markdown content.\n\n::: tip\nThis plugin can be used multiple times to support different types of containers.\n:::\n\n## Options\n\n### type\n\n- Type: `string`\n\n- Details:\n\n  The type of the container.\n\n  It will be used as the `name` param of [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api).\n\n### locales\n\n- Type: `Record<string, { defaultInfo: string }>`\n\n- Details:\n\n  The default `info` of the container in different locales.\n\n  If this option is not specified, the default `info` will fallback to the uppercase of the [type](#type) option.\n\n- Example:\n\n```js\nmodule.exports = {\n  plugins: [\n    [\n      '@vuepress/container',\n      {\n        type: 'tip',\n        locales: {\n          '/': {\n            defaultInfo: 'TIP',\n          },\n          '/zh/': {\n            defaultInfo: '提示',\n          },\n        },\n      },\n    ],\n  ],\n}\n```\n\n- Also see:\n  - [Guide > I18n](../../guide/i18n.md)\n\n### before\n\n- Type: `(info: string) => string`\n\n- Default:\n\n```ts\n(info: string): string =>\n  `<div class=\"custom-container ${type}\">${info ? `<p class=\"custom-container-title\">${info}</p>` : ''}\\n`\n```\n\n- Details:\n\n  A function to render the starting tag of the container.\n\n  The first param is the `info` part of [container syntax](#container-syntax).\n\n  This option will not take effect if you don't specify the [after](#after) option.\n\n### after\n\n- Type: `(info: string) => string`\n\n- Default:\n\n```ts\n(): string => '</div>\\n'\n```\n\n- Details:\n\n  A function to render the ending tag of the container.\n\n  The first param is the `info` part of [container syntax](#container-syntax).\n\n  This option will not take effect if you don't specify the [before](#before) option.\n\n### render\n\n- Type:\n\n```ts\ntype MarkdownItContainerRenderFunction = (\n  tokens: Token[],\n  index: number,\n  options: any,\n  env: MarkdownEnv,\n  self: Renderer\n) => string\n```\n\n- Details:\n\n  The `render` option of [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api).\n\n  This plugin uses a default `render` function. If you specify this option, the default `render` function will be replaced, and the [locales](#locales), [before](#before) and [after](#after) options will be ignored.\n\n### validate\n\n- Type: `(params: string) => boolean`\n\n- Details:\n\n  The `validate` option of [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api).\n\n### marker\n\n- Type: `string`\n\n- Details:\n\n  The `marker` option of [markdown-it-container](https://github.com/markdown-it/markdown-it-container#api).\n"}},18510:(n,e,s)=>{s.r(e),s.d(e,{default:()=>f});var a=s(66252);const l=(0,a._)("h1",{id:"container",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#container","aria-hidden":"true"},"#"),(0,a.Uk)(" container")],-1),t=(0,a._)("p",null,"Register markdown custom containers in your VuePress site.",-1),o=(0,a._)("p",null,[(0,a.Uk)("This plugin simplifies the use of "),(0,a._)("a",{href:"https://github.com/markdown-it/markdown-it-container",target:"_blank",rel:"noopener noreferrer"},"markdown-it-container"),(0,a.Uk)(", but also retains its original capabilities.")],-1),p=(0,a.Uk)("The "),r=(0,a.Uk)("Custom Containers"),i=(0,a.Uk)(" of default theme is powered by this plugin."),c=(0,a.uE)('<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm i -D @vuepress/plugin-container@next</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="container-syntax" tabindex="-1"><a class="header-anchor" href="#container-syntax" aria-hidden="true">#</a> Container Syntax</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">::: &lt;type&gt; </span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">info</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">content</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"><span style="color:#D4D4D4;">:::</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>The <code>type</code> is required and should be specified via <a href="#type">type</a> option.</li><li>The <code>info</code> is optional, and the default value can be specified via <code>defaultInfo</code> in <a href="#locales">locales</a> option.</li><li>The <code>content</code> can be any valid markdown content.</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This plugin can be used multiple times to support different types of containers.</p></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>The type of the container.</p><p>It will be used as the <code>name</code> param of <a href="https://github.com/markdown-it/markdown-it-container#api" target="_blank" rel="noopener noreferrer">markdown-it-container</a>.</p></li></ul><h3 id="locales" tabindex="-1"><a class="header-anchor" href="#locales" aria-hidden="true">#</a> locales</h3><ul><li><p>Type: <code>Record&lt;string, { defaultInfo: string }&gt;</code></p></li><li><p>Details:</p><p>The default <code>info</code> of the container in different locales.</p><p>If this option is not specified, the default <code>info</code> will fallback to the uppercase of the <a href="#type">type</a> option.</p></li><li><p>Example:</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">    [</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;@vuepress/container&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">      {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;tip&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">locales:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;TIP&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#CE9178;">&#39;/zh/&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">defaultInfo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;提示&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">          },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        },</span></span>\n<span class="line"><span style="color:#D4D4D4;">      },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  ],</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',12),d=(0,a.Uk)("Also see: "),u=(0,a.Uk)("Guide > I18n"),D=(0,a.uE)('<h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">`&lt;div class=&quot;custom-container </span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">type</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;&gt;</span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">info</span><span style="color:#D4D4D4;"> ? </span><span style="color:#CE9178;">`&lt;p class=&quot;custom-container-title&quot;&gt;</span><span style="color:#569CD6;">${</span><span style="color:#9CDCFE;">info</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;`</span><span style="color:#D4D4D4;"> : </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#569CD6;">}</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">`</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>Details:</p><p>A function to render the starting tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#after">after</a> option.</p></li></ul><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after" aria-hidden="true">#</a> after</h3><ul><li><p>Type: <code>(info: string) =&gt; string</code></p></li><li><p>Default:</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">(): </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&lt;/div&gt;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p>Details:</p><p>A function to render the ending tag of the container.</p><p>The first param is the <code>info</code> part of <a href="#container-syntax">container syntax</a>.</p><p>This option will not take effect if you don&#39;t specify the <a href="#before">before</a> option.</p></li></ul><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><ul><li>Type:</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MarkdownItContainerRenderFunction</span><span style="color:#D4D4D4;"> = (</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Token</span><span style="color:#D4D4D4;">[],</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">env</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">MarkdownEnv</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Renderer</span></span>\n<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">string</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><p>Details:</p><p>The <code>render</code> option of <a href="https://github.com/markdown-it/markdown-it-container#api" target="_blank" rel="noopener noreferrer">markdown-it-container</a>.</p><p>This plugin uses a default <code>render</code> function. If you specify this option, the default <code>render</code> function will be replaced, and the <a href="#locales">locales</a>, <a href="#before">before</a> and <a href="#after">after</a> options will be ignored.</p></li></ul><h3 id="validate" tabindex="-1"><a class="header-anchor" href="#validate" aria-hidden="true">#</a> validate</h3><ul><li><p>Type: <code>(params: string) =&gt; boolean</code></p></li><li><p>Details:</p><p>The <code>validate</code> option of <a href="https://github.com/markdown-it/markdown-it-container#api" target="_blank" rel="noopener noreferrer">markdown-it-container</a>.</p></li></ul><h3 id="marker" tabindex="-1"><a class="header-anchor" href="#marker" aria-hidden="true">#</a> marker</h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>The <code>marker</code> option of <a href="https://github.com/markdown-it/markdown-it-container#api" target="_blank" rel="noopener noreferrer">markdown-it-container</a>.</p></li></ul>',16),h={},f=(0,s(83744).Z)(h,[["render",function(n,e){const s=(0,a.up)("NpmBadge"),h=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,(0,a.Wm)(s,{package:"@vuepress/plugin-container"}),t,o,(0,a._)("p",null,[p,(0,a.Wm)(h,{to:"/vuepress-next/reference/default-theme/markdown.html#custom-containers"},{default:(0,a.w5)((()=>[r])),_:1}),i]),c,(0,a._)("ul",null,[(0,a._)("li",null,[d,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(h,{to:"/vuepress-next/guide/i18n.html"},{default:(0,a.w5)((()=>[u])),_:1})])])])]),D],64)}]])}}]);