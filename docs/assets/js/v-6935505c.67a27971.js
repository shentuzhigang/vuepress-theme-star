"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1175],{85777:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-6935505c",path:"/vuepress-next/guide/markdown.html",title:"Markdown",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Syntax Extensions",slug:"syntax-extensions",children:[{level:3,title:"Embedded",slug:"embedded",children:[]},{level:3,title:"Header Anchors",slug:"header-anchors",children:[]},{level:3,title:"Links",slug:"links",children:[]},{level:3,title:"Emoji ðŸŽ‰",slug:"emoji",children:[]},{level:3,title:"Table of Contents",slug:"table-of-contents",children:[]},{level:3,title:"Code Blocks",slug:"code-blocks",children:[]},{level:3,title:"Import Code Blocks",slug:"import-code-blocks",children:[]}]},{level:2,title:"Using Vue in Markdown",slug:"using-vue-in-markdown",children:[{level:3,title:"Template Syntax",slug:"template-syntax",children:[]},{level:3,title:"Components",slug:"components",children:[]}]},{level:2,title:"Cautions",slug:"cautions",children:[{level:3,title:"Deprecated HTML Tags",slug:"deprecated-html-tags",children:[]}]}],git:{updatedTime:1639839959e3,contributors:[{name:"Starzkg",email:"1600337300@qq.com",commits:1},{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:6.12,words:1835},filePathRelative:"vuepress-next/guide/markdown.md",content:"# Markdown\n\nMake sure you already know Markdown well before reading this section. If not, please learn some [Markdown tutorials](https://commonmark.org/help/) first.\n\n## Syntax Extensions\n\nThe Markdown content in VuePress will be parsed by [markdown-it](https://github.com/markdown-it/markdown-it), which supports [syntax extensions](https://github.com/markdown-it/markdown-it#syntax-extensions) via markdown-it plugins.\n\nThis section will introduce built-in Markdown syntax extensions of VuePress.\n\nYou can also configure those built-in extensions, load more markdown-it plugins and implement your own extensions via [markdown](../reference/config.md#markdown) option and [extendsMarkdown](../reference/plugin-api.md#extendsmarkdown) option.\n\n### Embedded\n\nEmbedded by markdown-it:\n\n- [Tables](https://help.github.com/articles/organizing-information-with-tables/) (GFM)\n- [Strikethrough](https://help.github.com/articles/basic-writing-and-formatting-syntax/#styling-text) (GFM)\n\n### Header Anchors\n\nYou might have noticed that, a `#` anchor is displayed when you hover the mouse on the headers of each section. By clicking the `#` anchor, you can jump to the section directly.\n\n::: tip\nThis header anchors extension is supported by [markdown-it-anchor](https://github.com/valeriangalliat/markdown-it-anchor).\n\nConfig reference: [markdown.anchor](../reference/config.md#markdown-anchor)\n:::\n\n### Links\n\nWhen using Markdown [link syntax](https://spec.commonmark.org/0.29/#link-reference-definitions), VuePress will implement some conversions for you.\n\nTake our documentation source files as an example:\n\n```bash\nâ””â”€ docs\n   â”œâ”€ guide\n   â”‚  â”œâ”€ getting-started.md\n   â”‚  â”œâ”€ markdown.md    # <- Here we are\n   â”‚  â””â”€ README.md\n   â”œâ”€ reference\n   â”‚  â””â”€ config.md\n   â””â”€ README.md\n```\n\n**Raw Markdown**\n\n```md\n\x3c!-- relative path --\x3e\n[Home](../README.md)  \n[Config Reference](../reference/config.md)  \n[Getting Started](./getting-started.md)  \n\x3c!-- absolute path --\x3e\n[Guide](/guide/README.md)  \n[Config Reference > markdown.links](/reference/config.md#links)  \n\x3c!-- URL --\x3e\n[GitHub](https://github.com)  \n```\n\n**Converted to**\n\n```vue\n<template>\n  <RouterLink to=\"/\">Home</RouterLink>\n  <RouterLink to=\"/reference/config.html\">Config Reference</RouterLink>\n  <RouterLink to=\"/guide/getting-started.html\">Getting Started</RouterLink>\n  <RouterLink to=\"/guide/\">Guide</RouterLink>\n  <RouterLink to=\"/reference/config.html#links\">Config Reference &gt; markdown.links</RouterLink>\n  <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n</template>\n```\n\n**Rendered as**\n\n[Home](../README.md)  \n[Config Reference](../reference/config.md)  \n[Getting Started](./getting-started.md)  \n[Guide](/guide/README.md)  \n[Config Reference > markdown.links](/reference/config.md#links)  \n[GitHub](https://github.com)  \n\n**Explanation**\n\n- Internal links will be converted to `<RouterLink>` for SPA navigation.\n- Internal links to `.md` files will be converted to the [page route path](./page.md#routing), and both absolute path and relative path are supported.\n- External links will get `target=\"_blank\" rel=\"noopener noreferrer\"` attrs.\n\n**Suggestion**\n\nTry to use relative paths instead of absolute paths for internal links.\n\n- Relative paths are a valid links to the target files, and they can navigate correctly when browsing the source files in your editor or repository.\n- Relative paths are consistent in different locales, so you don't need to change the locale path when translating your content.\n- When using absolute paths, if the [base](../reference/config.md#base) of your site is not `\"/\"`, you will need to prepend the `base` manually or use [base helper](./assets.md#base-helper).\n\n::: tip\nThis links extension is supported by our built-in plugin.\n\nConfig reference: [markdown.links](../reference/config.md#markdown-links)\n:::\n\n### Emoji :tada:\n\nYou can add emoji to your Markdown content by typing `:EMOJICODE:`.\n\nFor a full list of available emoji and codes, check out [emoji-cheat-sheet](https://github.com/ikatyang/emoji-cheat-sheet).\n\n**Input**\n\n```md\nVuePress 2 is out :tada: !\n```\n\n**Output**\n\nVuePress 2 is out :tada: !\n\n::: tip\nThis emoji extension is supported by [markdown-it-emoji](https://github.com/markdown-it/markdown-it-emoji).\n\nConfig reference: [markdown.emoji](../reference/config.md#markdown-emoji)\n:::\n\n### Table of Contents\n\nIf you want to put the table of contents (TOC) of your current page inside your Markdown content, you can use the `[[toc]]` syntax.\n\n**Input**\n\n```md\n[[toc]]\n```\n\n**Output**\n\n[[toc]]\n\nThe headers in TOC will link to the corresponding [header anchors](#header-anchors), so TOC won't work well if you disable header anchors.\n\n::: tip\nThis toc extension is supported by our built-in plugin, which is forked and modified from [markdown-it-toc-done-right](https://github.com/nagaozen/markdown-it-toc-done-right).\n\nConfig reference: [markdown.toc](../reference/config.md#markdown-toc)\n:::\n\n### Code Blocks\n\nFollowing code blocks extensions are implemented during markdown parsing in Node side. That means, the code blocks won't be processed in client side.\n\n#### Line Highlighting\n\nYou can highlight specified lines of your code blocks by adding line ranges mark in your fenced code blocks:\n\n**Input**\n\n````md\n```ts{1,6-8}\nimport type { UserConfig } from '@vuepress/cli'\n\nexport const config: UserConfig = {\n  title: 'Hello, VuePress',\n\n  themeConfig: {\n    logo: 'https://vuejs.org/images/logo.png',\n  },\n}\n```\n````\n\n**Output**\n\n```ts{1,6-8}\nimport type { UserConfig } from '@vuepress/cli'\n\nexport const config: UserConfig = {\n  title: 'Hello, VuePress',\n\n  themeConfig: {\n    logo: 'https://vuejs.org/images/logo.png',\n  },\n}\n```\n\nExamples for line ranges mark:\n\n- Line ranges: `{5-8}`\n- Multiple single lines: `{4,7,9}`\n- Combined: `{4,7-13,16,23-27,40}`\n\n::: tip\nThis line highlighting extension is supported by our built-in plugin, which is forked and modified from [markdown-it-highlight-lines](https://github.com/egoist/markdown-it-highlight-lines).\n\nConfig reference: [markdown.code.highlightLines](../reference/config.md#markdown-code-highlightlines)\n:::\n\n#### Line Numbers\n\nYou must have noticed that the number of lines is displayed on the left side of code blocks. This is enabled by default and you can disable it in config.\n\nYou can add `:line-numbers` / `:no-line-numbers` mark in your fenced code blocks to override the value set in config.\n\n**Input**\n\n````md\n```ts\n// line-numbers is enabled by default\nconst line2 = 'This is line 2'\nconst line3 = 'This is line 3'\n```\n\n```ts:no-line-numbers\n// line-numbers is disabled\nconst line2 = 'This is line 2'\nconst line3 = 'This is line 3'\n```\n````\n\n**Output**\n\n```ts\n// line-numbers is enabled by default\nconst line2 = 'This is line 2'\nconst line3 = 'This is line 3'\n```\n\n```ts:no-line-numbers\n// line-numbers is disabled\nconst line2 = 'This is line 2'\nconst line3 = 'This is line 3'\n```\n\n::: tip\nThis line numbers extension is supported by our built-in plugin.\n\nConfig reference: [markdown.code.lineNumbers](../reference/config.md#markdown-code-linenumbers)\n:::\n\n#### Wrap with v-pre\n\nAs [template syntax is allowed in Markdown](#template-syntax), it would also work in code blocks, too.\n\nTo avoid your code blocks being compiled by Vue, VuePress will add [v-pre](https://v3.vuejs.org/api/directives.html#v-pre) directive to your code blocks by default, which can be disabled in config.\n\nYou can add `:v-pre` / `:no-v-pre` mark in your fenced code blocks to override the value set in config.\n\n::: warning\nThe template syntax characters, for example, the \"Mustache\" syntax (double curly braces) might be parsed by the syntax highlighter. Thus, as the following example, `:no-v-pre` might not work well in some languages.\n\nIf you want to make Vue syntax work in those languages anyway, try to disable the default syntax highlighting and implement your own syntax highlighting in client side.\n:::\n\n**Input**\n\n````md\n```md\n\x3c!-- This will be kept as is by default --\x3e\n1 + 2 + 3 = {{ 1 + 2 + 3 }}\n```\n\n```md:no-v-pre\n\x3c!-- This will be compiled by Vue --\x3e\n1 + 2 + 3 = {{ 1 + 2 + 3 }}\n```\n\n```js:no-v-pre\n// This won't be compiled correctly because of js syntax highlighting\nconst onePlusTwoPlusThree = {{ 1 + 2 + 3 }}\n```\n````\n\n**Output**\n\n```md\n\x3c!-- This will be kept as is --\x3e\n1 + 2 + 3 = {{ 1 + 2 + 3 }}\n```\n\n```md:no-v-pre\n\x3c!-- This will be compiled by Vue --\x3e\n1 + 2 + 3 = {{ 1 + 2 + 3 }}\n```\n\n\x3c!--\nusing :no-v-pre on JS code blocks has potential issue with shiki, so we are\nnot actually using :no-v-pre here, just as an example of incorrect usage\n--\x3e\n\n```js\n// This won't be compiled correctly because of js syntax highlighting\nconst onePlusTwoPlusThree = {{ 1 + 2 + 3 }}\n```\n\n::: tip\nThis v-pre extension is supported by our built-in plugin.\n\nConfig reference: [markdown.code.vPre](../reference/config.md#markdown-vpre)\n:::\n\n### Import Code Blocks\n\nYou can import code blocks from files with following syntax:\n\n```md\n\x3c!-- minimal syntax --\x3e\n@[code](../foo.js)\n```\n\nIf you want to partially import the file:\n\n```md\n\x3c!-- partial import, from line 1 to line 10 --\x3e\n@[code{1-10}](../foo.js)\n```\n\nThe code language is inferred from the file extension, while it is recommended to specify it explicitly:\n\n```md\n\x3c!-- specify the code language --\x3e\n@[code js](../foo.js)\n```\n\nIn fact, the second part inside the `[]` will be treated as the mark of the code fence, so it supports all the syntax mentioned in the above [Code Blocks](#code-blocks) section:\n\n```md\n\x3c!-- line highlighting --\x3e\n@[code js{2,4-5}](../foo.js)\n```\n\nHere is a complex example:\n\n- import line 3 to line 10 of the `'../foo.js'` file\n- specify the language as `'js'`\n- highlight line 3 of the imported code, i.e. line 5 of the `'../foo.js'` file\n- disable line numbers\n\n```md\n@[code{3-10} js{3}:no-line-numbers](../foo.js)\n```\n\nNotice that path aliases are not available in import code syntax. You can use following config to handle path alias yourself:\n\n```js\nmodule.exports = {\n  markdown: {\n    importCode: {\n      handleImportPath: (str) =>\n        str.replace(/^@src/, path.resolve(__dirname, 'path/to/src')),\n    },\n  },\n}\n```\n\n```md\n\x3c!-- it will be resolved to 'path/to/src/foo.js' --\x3e\n@[code](@src/foo.js)\n```\n\n::: tip\nThis import code extension is supported by our built-in plugin.\n\nConfig reference: [markdown.importCode](../reference/config.md#markdown-importcode)\n:::\n\n## Using Vue in Markdown\n\nThis section will introduce some basic usage of Vue in Markdown.\n\nCheck out [Cookbook > Markdown and Vue SFC](../advanced/cookbook/markdown-and-vue-sfc.md) for more details.\n\n### Template Syntax\n\nAs we know:\n\n- HTML is allowed in Markdown.\n- Vue template syntax is compatible with HTML.\n\nThat means, [Vue template syntax](https://v3.vuejs.org/guide/template-syntax.html) is allowed in Markdown.\n\n**Input**\n\n```md\nOne plus one equals: {{ 1 + 1 }}\n\n<span v-for=\"i in 3\"> span: {{ i }} </span>\n```\n\n**Output**\n\nOne plus one equals: {{ 1 + 1 }}\n\n<span v-for=\"i in 3\"> span: {{ i }} </span>\n\n### Components\n\nYou can use Vue components directly in Markdown.\n\n**Input**\n\n```md\nThis is default theme built-in `<Badge />` component <Badge text=\"demo\" />\n```\n\n**Output**\n\nThis is default theme built-in `<Badge />` component <Badge text=\"demo\" />\n\n::: tip\nCheck out the [Built-in Components](../reference/components.md) for a full list of built-in components.\n\nCheck out the [Default Theme > Built-in Components](../reference/default-theme/components.md) for a full list of default theme built-in components.\n:::\n\n## Cautions\n\n### Deprecated HTML Tags\n\nDeprecated HTML tags such as [\\<center>](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center) and [\\<font>](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font) are not allowed in VuePress markdown by default.\n\nThose tags would not be recognized as native HTML tags by Vue template compiler. Instead, Vue will try to resolve those tags as Vue components, and obviously these components usually don't exist.\n\nYou should try to avoid using deprecated HTML tags. However, if you want to use those tags anyway, try either of the following workarounds:\n\n- Adding a [v-pre](https://v3.vuejs.org/api/directives.html#v-pre) directive to skip the compilation of the element and its children. Notice that the template syntax would also be invalid.\n- Using [compilerOptions.isCustomElement](https://v3.vuejs.org/api/application-config.html#compileroptions) to tell Vue template compiler not try to resolve them as components.\n  - For `@bundler-webpack`, set [vue.compilerOptions](../reference/bundler/webpack.md#vue)\n  - For `@bundler-vite`, set [vuePluginOptions.template.compilerOptions](../reference/bundler/vite.md#vuepluginoptions)\n"}},81220:(n,e,s)=>{s.r(e),s.d(e,{default:()=>Fe});var a=s(66252),l=s(3577);const o=(0,a.uE)('<h1 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> Markdown</h1><p>Make sure you already know Markdown well before reading this section. If not, please learn some <a href="https://commonmark.org/help/" target="_blank" rel="noopener noreferrer">Markdown tutorials</a> first.</p><h2 id="syntax-extensions" tabindex="-1"><a class="header-anchor" href="#syntax-extensions" aria-hidden="true">#</a> Syntax Extensions</h2><p>The Markdown content in VuePress will be parsed by <a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener noreferrer">markdown-it</a>, which supports <a href="https://github.com/markdown-it/markdown-it#syntax-extensions" target="_blank" rel="noopener noreferrer">syntax extensions</a> via markdown-it plugins.</p><p>This section will introduce built-in Markdown syntax extensions of VuePress.</p>',5),t=(0,a.Uk)("You can also configure those built-in extensions, load more markdown-it plugins and implement your own extensions via "),r=(0,a.Uk)("markdown"),i=(0,a.Uk)(" option and "),p=(0,a.Uk)("extendsMarkdown"),c=(0,a.Uk)(" option."),d=(0,a.uE)('<h3 id="embedded" tabindex="-1"><a class="header-anchor" href="#embedded" aria-hidden="true">#</a> Embedded</h3><p>Embedded by markdown-it:</p><ul><li><a href="https://help.github.com/articles/organizing-information-with-tables/" target="_blank" rel="noopener noreferrer">Tables</a> (GFM)</li><li><a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/#styling-text" target="_blank" rel="noopener noreferrer">Strikethrough</a> (GFM)</li></ul><h3 id="header-anchors" tabindex="-1"><a class="header-anchor" href="#header-anchors" aria-hidden="true">#</a> Header Anchors</h3><p>You might have noticed that, a <code>#</code> anchor is displayed when you hover the mouse on the headers of each section. By clicking the <code>#</code> anchor, you can jump to the section directly.</p>',5),u={class:"custom-container tip"},m=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),h=(0,a._)("p",null,[(0,a.Uk)("This header anchors extension is supported by "),(0,a._)("a",{href:"https://github.com/valeriangalliat/markdown-it-anchor",target:"_blank",rel:"noopener noreferrer"},"markdown-it-anchor"),(0,a.Uk)(".")],-1),D=(0,a.Uk)("Config reference: "),g=(0,a.Uk)("markdown.anchor"),y=(0,a.uE)('<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> Links</h3><p>When using Markdown <a href="https://spec.commonmark.org/0.29/#link-reference-definitions" target="_blank" rel="noopener noreferrer">link syntax</a>, VuePress will implement some conversions for you.</p><p>Take our documentation source files as an example:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">â””â”€ docs</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”œâ”€ guide</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”‚  â”œâ”€ getting-started.md</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”‚  â”œâ”€ markdown.md    </span><span style="color:#6A9955;"># &lt;- Here we are</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”‚  â””â”€ README.md</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”œâ”€ reference</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â”‚  â””â”€ config.md</span></span>\n<span class="line"><span style="color:#D4D4D4;">   â””â”€ README.md</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>Raw Markdown</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- relative path --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">Home</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../README.md</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">Config Reference</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../reference/config.md</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">Getting Started</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">./getting-started.md</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- absolute path --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">Guide</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">/guide/README.md</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">Config Reference &gt; markdown.links</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">/reference/config.md#links</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- URL --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">GitHub</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">https://github.com</span><span style="color:#D4D4D4;">)  </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>Converted to</strong></p><div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Home</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/reference/config.html&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Config Reference</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/guide/getting-started.html&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Getting Started</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/guide/&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Guide</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/reference/config.html#links&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Config Reference </span><span style="color:#569CD6;">&amp;gt;</span><span style="color:#D4D4D4;"> markdown.links</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">RouterLink</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">a</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://github.com&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;_blank&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;noopener noreferrer&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">GitHub</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">a</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>Rendered as</strong></p>',9),b=(0,a.Uk)("Home"),f=(0,a._)("br",null,null,-1),k=(0,a.Uk)("Config Reference"),w=(0,a._)("br",null,null,-1),v=(0,a.Uk)("Getting Started"),C=(0,a._)("br",null,null,-1),x=(0,a._)("a",{href:"/guide/README.md",target:"_blank",rel:"noopener noreferrer"},"Guide",-1),E=(0,a._)("br",null,null,-1),_=(0,a._)("a",{href:"/reference/config.md#links",target:"_blank",rel:"noopener noreferrer"},"Config Reference > markdown.links",-1),T=(0,a._)("br",null,null,-1),U=(0,a._)("a",{href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},"GitHub",-1),j=(0,a._)("p",null,[(0,a._)("strong",null,"Explanation")],-1),M=(0,a._)("li",null,[(0,a.Uk)("Internal links will be converted to "),(0,a._)("code",null,"<RouterLink>"),(0,a.Uk)(" for SPA navigation.")],-1),F=(0,a.Uk)("Internal links to "),R=(0,a._)("code",null,".md",-1),A=(0,a.Uk)(" files will be converted to the "),L=(0,a.Uk)("page route path"),H=(0,a.Uk)(", and both absolute path and relative path are supported."),I=(0,a._)("li",null,[(0,a.Uk)("External links will get "),(0,a._)("code",null,'target="_blank" rel="noopener noreferrer"'),(0,a.Uk)(" attrs.")],-1),V=(0,a._)("p",null,[(0,a._)("strong",null,"Suggestion")],-1),W=(0,a._)("p",null,"Try to use relative paths instead of absolute paths for internal links.",-1),B=(0,a._)("li",null,"Relative paths are a valid links to the target files, and they can navigate correctly when browsing the source files in your editor or repository.",-1),P=(0,a._)("li",null,"Relative paths are consistent in different locales, so you don't need to change the locale path when translating your content.",-1),O=(0,a.Uk)("When using absolute paths, if the "),S=(0,a.Uk)("base"),q=(0,a.Uk)(" of your site is not "),Y=(0,a._)("code",null,'"/"',-1),G=(0,a.Uk)(", you will need to prepend the "),z=(0,a._)("code",null,"base",-1),N=(0,a.Uk)(" manually or use "),J=(0,a.Uk)("base helper"),K=(0,a.Uk)("."),Z={class:"custom-container tip"},Q=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),X=(0,a._)("p",null,"This links extension is supported by our built-in plugin.",-1),$=(0,a.Uk)("Config reference: "),nn=(0,a.Uk)("markdown.links"),en=(0,a.uE)('<h3 id="emoji" tabindex="-1"><a class="header-anchor" href="#emoji" aria-hidden="true">#</a> Emoji ðŸŽ‰</h3><p>You can add emoji to your Markdown content by typing <code>:EMOJICODE:</code>.</p><p>For a full list of available emoji and codes, check out <a href="https://github.com/ikatyang/emoji-cheat-sheet" target="_blank" rel="noopener noreferrer">emoji-cheat-sheet</a>.</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">VuePress 2 is out :tada: !</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Output</strong></p><p>VuePress 2 is out ðŸŽ‰ !</p>',7),sn={class:"custom-container tip"},an=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),ln=(0,a._)("p",null,[(0,a.Uk)("This emoji extension is supported by "),(0,a._)("a",{href:"https://github.com/markdown-it/markdown-it-emoji",target:"_blank",rel:"noopener noreferrer"},"markdown-it-emoji"),(0,a.Uk)(".")],-1),on=(0,a.Uk)("Config reference: "),tn=(0,a.Uk)("markdown.emoji"),rn=(0,a.uE)('<h3 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of Contents</h3><p>If you want to put the table of contents (TOC) of your current page inside your Markdown content, you can use the <code>[[toc]]</code> syntax.</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">[toc</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Output</strong></p>',5),pn={class:"table-of-contents"},cn=(0,a.Uk)("Syntax Extensions"),dn=(0,a.Uk)("Embedded"),un=(0,a.Uk)("Header Anchors"),mn=(0,a.Uk)("Links"),hn=(0,a.Uk)("Emoji ðŸŽ‰"),Dn=(0,a.Uk)("Table of Contents"),gn=(0,a.Uk)("Code Blocks"),yn=(0,a.Uk)("Import Code Blocks"),bn=(0,a.Uk)("Using Vue in Markdown"),fn=(0,a.Uk)("Template Syntax"),kn=(0,a.Uk)("Components"),wn=(0,a.Uk)("Cautions"),vn=(0,a.Uk)("Deprecated HTML Tags"),Cn=(0,a._)("p",null,[(0,a.Uk)("The headers in TOC will link to the corresponding "),(0,a._)("a",{href:"#header-anchors"},"header anchors"),(0,a.Uk)(", so TOC won't work well if you disable header anchors.")],-1),xn={class:"custom-container tip"},En=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),_n=(0,a._)("p",null,[(0,a.Uk)("This toc extension is supported by our built-in plugin, which is forked and modified from "),(0,a._)("a",{href:"https://github.com/nagaozen/markdown-it-toc-done-right",target:"_blank",rel:"noopener noreferrer"},"markdown-it-toc-done-right"),(0,a.Uk)(".")],-1),Tn=(0,a.Uk)("Config reference: "),Un=(0,a.Uk)("markdown.toc"),jn=(0,a.uE)('<h3 id="code-blocks" tabindex="-1"><a class="header-anchor" href="#code-blocks" aria-hidden="true">#</a> Code Blocks</h3><p>Following code blocks extensions are implemented during markdown parsing in Node side. That means, the code blocks won&#39;t be processed in client side.</p><h4 id="line-highlighting" tabindex="-1"><a class="header-anchor" href="#line-highlighting" aria-hidden="true">#</a> Line Highlighting</h4><p>You can highlight specified lines of your code blocks by adding line ranges mark in your fenced code blocks:</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">```ts{1,6-8}</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">UserConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/cli&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">UserConfig</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Hello, VuePress&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">themeConfig:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">logo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;https://vuejs.org/images/logo.png&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>Output</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">UserConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vuepress/cli&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">config</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">UserConfig</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Hello, VuePress&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">themeConfig:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">logo:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;https://vuejs.org/images/logo.png&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line">Â </div><br><br><br><br><div class="highlight-line">Â </div><div class="highlight-line">Â </div><div class="highlight-line">Â </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Examples for line ranges mark:</p><ul><li>Line ranges: <code>{5-8}</code></li><li>Multiple single lines: <code>{4,7,9}</code></li><li>Combined: <code>{4,7-13,16,23-27,40}</code></li></ul>',10),Mn={class:"custom-container tip"},Fn=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),Rn=(0,a._)("p",null,[(0,a.Uk)("This line highlighting extension is supported by our built-in plugin, which is forked and modified from "),(0,a._)("a",{href:"https://github.com/egoist/markdown-it-highlight-lines",target:"_blank",rel:"noopener noreferrer"},"markdown-it-highlight-lines"),(0,a.Uk)(".")],-1),An=(0,a.Uk)("Config reference: "),Ln=(0,a.Uk)("markdown.code.highlightLines"),Hn=(0,a.uE)('<h4 id="line-numbers" tabindex="-1"><a class="header-anchor" href="#line-numbers" aria-hidden="true">#</a> Line Numbers</h4><p>You must have noticed that the number of lines is displayed on the left side of code blocks. This is enabled by default and you can disable it in config.</p><p>You can add <code>:line-numbers</code> / <code>:no-line-numbers</code> mark in your fenced code blocks to override the value set in config.</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">```ts</span></span>\n<span class="line"><span style="color:#6A9955;">// line-numbers is enabled by default</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line2</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 2&#39;</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line3</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 3&#39;</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">```ts:no-line-numbers</span></span>\n<span class="line"><span style="color:#6A9955;">// line-numbers is disabled</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line2</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 2&#39;</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line3</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 3&#39;</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>Output</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// line-numbers is enabled by default</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line2</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 2&#39;</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line3</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 3&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-typescript ext-ts"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// line-numbers is disabled</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line2</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 2&#39;</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">line3</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;This is line 3&#39;</span></span>\n<span class="line"></span></code></pre></div>',8),In={class:"custom-container tip"},Vn=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),Wn=(0,a._)("p",null,"This line numbers extension is supported by our built-in plugin.",-1),Bn=(0,a.Uk)("Config reference: "),Pn=(0,a.Uk)("markdown.code.lineNumbers"),On=(0,a.uE)('<h4 id="wrap-with-v-pre" tabindex="-1"><a class="header-anchor" href="#wrap-with-v-pre" aria-hidden="true">#</a> Wrap with v-pre</h4><p>As <a href="#template-syntax">template syntax is allowed in Markdown</a>, it would also work in code blocks, too.</p><p>To avoid your code blocks being compiled by Vue, VuePress will add <a href="https://v3.vuejs.org/api/directives.html#v-pre" target="_blank" rel="noopener noreferrer">v-pre</a> directive to your code blocks by default, which can be disabled in config.</p><p>You can add <code>:v-pre</code> / <code>:no-v-pre</code> mark in your fenced code blocks to override the value set in config.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The template syntax characters, for example, the &quot;Mustache&quot; syntax (double curly braces) might be parsed by the syntax highlighter. Thus, as the following example, <code>:no-v-pre</code> might not work well in some languages.</p><p>If you want to make Vue syntax work in those languages anyway, try to disable the default syntax highlighting and implement your own syntax highlighting in client side.</p></div><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">```md</span></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- This will be kept as is by default --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">1 + 2 + 3 = {{ 1 + 2 + 3 }}</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">```md:no-v-pre</span></span>\n<span class="line"><span style="color:#6A9955;">&lt;!-- This will be compiled by Vue --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">1 + 2 + 3 = {{ 1 + 2 + 3 }}</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">```js:no-v-pre</span></span>\n<span class="line"><span style="color:#6A9955;">// This won&#39;t be compiled correctly because of js syntax highlighting</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">onePlusTwoPlusThree</span><span style="color:#D4D4D4;"> = {{ </span><span style="color:#B5CEA8;">1</span><span style="color:#9CDCFE;"> + </span><span style="color:#B5CEA8;">2</span><span style="color:#9CDCFE;"> + </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;"> }}</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>Output</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- This will be kept as is --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">1 + 2 + 3 = {{ 1 + 2 + 3 }}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- This will be compiled by Vue --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">1 + 2 + 3 = 6</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// This won&#39;t be compiled correctly because of js syntax highlighting</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">onePlusTwoPlusThree</span><span style="color:#D4D4D4;"> = {{ </span><span style="color:#B5CEA8;">1</span><span style="color:#9CDCFE;"> + </span><span style="color:#B5CEA8;">2</span><span style="color:#9CDCFE;"> + </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;"> }}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',11),Sn={class:"custom-container tip"},qn=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),Yn=(0,a._)("p",null,"This v-pre extension is supported by our built-in plugin.",-1),Gn=(0,a.Uk)("Config reference: "),zn=(0,a.Uk)("markdown.code.vPre"),Nn=(0,a.uE)('<h3 id="import-code-blocks" tabindex="-1"><a class="header-anchor" href="#import-code-blocks" aria-hidden="true">#</a> Import Code Blocks</h3><p>You can import code blocks from files with following syntax:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- minimal syntax --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>If you want to partially import the file:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- partial import, from line 1 to line 10 --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code{1-10}</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The code language is inferred from the file extension, while it is recommended to specify it explicitly:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- specify the code language --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code js</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>In fact, the second part inside the <code>[]</code> will be treated as the mark of the code fence, so it supports all the syntax mentioned in the above <a href="#code-blocks">Code Blocks</a> section:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- line highlighting --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code js{2,4-5}</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Here is a complex example:</p><ul><li>import line 3 to line 10 of the <code>&#39;../foo.js&#39;</code> file</li><li>specify the language as <code>&#39;js&#39;</code></li><li>highlight line 3 of the imported code, i.e. line 5 of the <code>&#39;../foo.js&#39;</code> file</li><li>disable line numbers</li></ul><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code{3-10} js{3}:no-line-numbers</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">../foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Notice that path aliases are not available in import code syntax. You can use following config to handle path alias yourself:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">markdown:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">importCode:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">handleImportPath</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">^</span><span style="color:#D16969;">@src/</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">__dirname</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;path/to/src&#39;</span><span style="color:#D4D4D4;">)),</span></span>\n<span class="line"><span style="color:#D4D4D4;">    },</span></span>\n<span class="line"><span style="color:#D4D4D4;">  },</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">&lt;!-- it will be resolved to &#39;path/to/src/foo.js&#39; --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">code</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">(</span><span style="color:#D4D4D4;text-decoration:underline;">@src/foo.js</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',15),Jn={class:"custom-container tip"},Kn=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),Zn=(0,a._)("p",null,"This import code extension is supported by our built-in plugin.",-1),Qn=(0,a.Uk)("Config reference: "),Xn=(0,a.Uk)("markdown.importCode"),$n=(0,a._)("h2",{id:"using-vue-in-markdown",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#using-vue-in-markdown","aria-hidden":"true"},"#"),(0,a.Uk)(" Using Vue in Markdown")],-1),ne=(0,a._)("p",null,"This section will introduce some basic usage of Vue in Markdown.",-1),ee=(0,a.Uk)("Check out "),se=(0,a.Uk)("Cookbook > Markdown and Vue SFC"),ae=(0,a.Uk)(" for more details."),le=(0,a.uE)('<h3 id="template-syntax" tabindex="-1"><a class="header-anchor" href="#template-syntax" aria-hidden="true">#</a> Template Syntax</h3><p>As we know:</p><ul><li>HTML is allowed in Markdown.</li><li>Vue template syntax is compatible with HTML.</li></ul><p>That means, <a href="https://v3.vuejs.org/guide/template-syntax.html" target="_blank" rel="noopener noreferrer">Vue template syntax</a> is allowed in Markdown.</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">One plus one equals: {{ 1 + 1 }}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;span v-for=&quot;i in 3&quot;&gt; span: {{ i }} &lt;/span&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Output</strong></p><p>One plus one equals: 2</p>',8),oe=(0,a.uE)('<h3 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> Components</h3><p>You can use Vue components directly in Markdown.</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">This is default theme built-in </span><span style="color:#CE9178;">`&lt;Badge /&gt;`</span><span style="color:#D4D4D4;"> component &lt;Badge text=&quot;demo&quot; /&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Output</strong></p>',5),te=(0,a.Uk)("This is default theme built-in "),re=(0,a._)("code",null,"<Badge />",-1),ie=(0,a.Uk)(" component "),pe={class:"custom-container tip"},ce=(0,a._)("p",{class:"custom-container-title"},"TIP",-1),de=(0,a.Uk)("Check out the "),ue=(0,a.Uk)("Built-in Components"),me=(0,a.Uk)(" for a full list of built-in components."),he=(0,a.Uk)("Check out the "),De=(0,a.Uk)("Default Theme > Built-in Components"),ge=(0,a.Uk)(" for a full list of default theme built-in components."),ye=(0,a.uE)('<h2 id="cautions" tabindex="-1"><a class="header-anchor" href="#cautions" aria-hidden="true">#</a> Cautions</h2><h3 id="deprecated-html-tags" tabindex="-1"><a class="header-anchor" href="#deprecated-html-tags" aria-hidden="true">#</a> Deprecated HTML Tags</h3><p>Deprecated HTML tags such as <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center" target="_blank" rel="noopener noreferrer">&lt;center&gt;</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font" target="_blank" rel="noopener noreferrer">&lt;font&gt;</a> are not allowed in VuePress markdown by default.</p><p>Those tags would not be recognized as native HTML tags by Vue template compiler. Instead, Vue will try to resolve those tags as Vue components, and obviously these components usually don&#39;t exist.</p><p>You should try to avoid using deprecated HTML tags. However, if you want to use those tags anyway, try either of the following workarounds:</p>',5),be=(0,a._)("li",null,[(0,a.Uk)("Adding a "),(0,a._)("a",{href:"https://v3.vuejs.org/api/directives.html#v-pre",target:"_blank",rel:"noopener noreferrer"},"v-pre"),(0,a.Uk)(" directive to skip the compilation of the element and its children. Notice that the template syntax would also be invalid.")],-1),fe=(0,a.Uk)("Using "),ke=(0,a._)("a",{href:"https://v3.vuejs.org/api/application-config.html#compileroptions",target:"_blank",rel:"noopener noreferrer"},"compilerOptions.isCustomElement",-1),we=(0,a.Uk)(" to tell Vue template compiler not try to resolve them as components. "),ve=(0,a.Uk)("For "),Ce=(0,a._)("code",null,"@bundler-webpack",-1),xe=(0,a.Uk)(", set "),Ee=(0,a.Uk)("vue.compilerOptions"),_e=(0,a.Uk)("For "),Te=(0,a._)("code",null,"@bundler-vite",-1),Ue=(0,a.Uk)(", set "),je=(0,a.Uk)("vuePluginOptions.template.compilerOptions"),Me={},Fe=(0,s(83744).Z)(Me,[["render",function(n,e){const s=(0,a.up)("RouterLink"),Me=(0,a.up)("Badge");return(0,a.wg)(),(0,a.iD)(a.HY,null,[o,(0,a._)("p",null,[t,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown"},{default:(0,a.w5)((()=>[r])),_:1}),i,(0,a.Wm)(s,{to:"/vuepress-next/reference/plugin-api.html#extendsmarkdown"},{default:(0,a.w5)((()=>[p])),_:1}),c]),d,(0,a._)("div",u,[m,h,(0,a._)("p",null,[D,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-anchor"},{default:(0,a.w5)((()=>[g])),_:1})])]),y,(0,a._)("p",null,[(0,a.Wm)(s,{to:"/vuepress-next/"},{default:(0,a.w5)((()=>[b])),_:1}),f,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html"},{default:(0,a.w5)((()=>[k])),_:1}),w,(0,a.Wm)(s,{to:"/vuepress-next/guide/getting-started.html"},{default:(0,a.w5)((()=>[v])),_:1}),C,x,E,_,T,U]),j,(0,a._)("ul",null,[M,(0,a._)("li",null,[F,R,A,(0,a.Wm)(s,{to:"/vuepress-next/guide/page.html#routing"},{default:(0,a.w5)((()=>[L])),_:1}),H]),I]),V,W,(0,a._)("ul",null,[B,P,(0,a._)("li",null,[O,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#base"},{default:(0,a.w5)((()=>[S])),_:1}),q,Y,G,z,N,(0,a.Wm)(s,{to:"/vuepress-next/guide/assets.html#base-helper"},{default:(0,a.w5)((()=>[J])),_:1}),K])]),(0,a._)("div",Z,[Q,X,(0,a._)("p",null,[$,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-links"},{default:(0,a.w5)((()=>[nn])),_:1})])]),en,(0,a._)("div",sn,[an,ln,(0,a._)("p",null,[on,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-emoji"},{default:(0,a.w5)((()=>[tn])),_:1})])]),rn,(0,a._)("nav",pn,[(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(s,{to:"#syntax-extensions"},{default:(0,a.w5)((()=>[cn])),_:1}),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(s,{to:"#embedded"},{default:(0,a.w5)((()=>[dn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#header-anchors"},{default:(0,a.w5)((()=>[un])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#links"},{default:(0,a.w5)((()=>[mn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#emoji"},{default:(0,a.w5)((()=>[hn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#table-of-contents"},{default:(0,a.w5)((()=>[Dn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#code-blocks"},{default:(0,a.w5)((()=>[gn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#import-code-blocks"},{default:(0,a.w5)((()=>[yn])),_:1})])])]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#using-vue-in-markdown"},{default:(0,a.w5)((()=>[bn])),_:1}),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(s,{to:"#template-syntax"},{default:(0,a.w5)((()=>[fn])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#components"},{default:(0,a.w5)((()=>[kn])),_:1})])])]),(0,a._)("li",null,[(0,a.Wm)(s,{to:"#cautions"},{default:(0,a.w5)((()=>[wn])),_:1}),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(s,{to:"#deprecated-html-tags"},{default:(0,a.w5)((()=>[vn])),_:1})])])])])]),Cn,(0,a._)("div",xn,[En,_n,(0,a._)("p",null,[Tn,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-toc"},{default:(0,a.w5)((()=>[Un])),_:1})])]),jn,(0,a._)("div",Mn,[Fn,Rn,(0,a._)("p",null,[An,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-code-highlightlines"},{default:(0,a.w5)((()=>[Ln])),_:1})])]),Hn,(0,a._)("div",In,[Vn,Wn,(0,a._)("p",null,[Bn,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-code-linenumbers"},{default:(0,a.w5)((()=>[Pn])),_:1})])]),On,(0,a._)("div",Sn,[qn,Yn,(0,a._)("p",null,[Gn,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-vpre"},{default:(0,a.w5)((()=>[zn])),_:1})])]),Nn,(0,a._)("div",Jn,[Kn,Zn,(0,a._)("p",null,[Qn,(0,a.Wm)(s,{to:"/vuepress-next/reference/config.html#markdown-importcode"},{default:(0,a.w5)((()=>[Xn])),_:1})])]),$n,ne,(0,a._)("p",null,[ee,(0,a.Wm)(s,{to:"/vuepress-next/advanced/cookbook/markdown-and-vue-sfc.html"},{default:(0,a.w5)((()=>[se])),_:1}),ae]),le,(0,a._)("p",null,[((0,a.wg)(),(0,a.iD)(a.HY,null,(0,a.Ko)(3,(n=>(0,a._)("span",null," span: "+(0,l.zw)(n),1))),64))]),oe,(0,a._)("p",null,[te,re,ie,(0,a.Wm)(Me,{text:"demo"})]),(0,a._)("div",pe,[ce,(0,a._)("p",null,[de,(0,a.Wm)(s,{to:"/vuepress-next/reference/components.html"},{default:(0,a.w5)((()=>[ue])),_:1}),me]),(0,a._)("p",null,[he,(0,a.Wm)(s,{to:"/vuepress-next/reference/default-theme/components.html"},{default:(0,a.w5)((()=>[De])),_:1}),ge])]),ye,(0,a._)("ul",null,[be,(0,a._)("li",null,[fe,ke,we,(0,a._)("ul",null,[(0,a._)("li",null,[ve,Ce,xe,(0,a.Wm)(s,{to:"/vuepress-next/reference/bundler/webpack.html#vue"},{default:(0,a.w5)((()=>[Ee])),_:1})]),(0,a._)("li",null,[_e,Te,Ue,(0,a.Wm)(s,{to:"/vuepress-next/reference/bundler/vite.html#vuepluginoptions"},{default:(0,a.w5)((()=>[je])),_:1})])])])])],64)}]])}}]);