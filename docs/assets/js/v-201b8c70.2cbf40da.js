"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6173],{68188:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-201b8c70",path:"/vuepress-next/reference/default-theme/components.html",title:"Built-in Components",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Badge",slug:"badge",children:[]},{level:2,title:"CodeGroup",slug:"codegroup",children:[]},{level:2,title:"CodeGroupItem",slug:"codegroupitem",children:[]}],git:{updatedTime:1635758933e3,contributors:[{name:"shentuzhigang",email:"shentuzhigang@moresec.cn",commits:1}]},readingTime:{minutes:.83,words:249},filePathRelative:"vuepress-next/reference/default-theme/components.md",content:'# Built-in Components\n\n<NpmBadge package="@vuepress/theme-default" />\n\n## Badge <Badge text="badge" />\n\n- Props:\n  - type\n    - Type: `\'tip\' | \'warning\' | \'danger\'`\n    - Default: `\'tip\'`\n  - text\n    - Type: `string`\n    - Default: `\'\'`\n  - vertical\n    - Type: `\'top\' | \'middle\' | \'bottom\' | undefined`\n    - Default: `undefined`\n\n- Example:\n\n**Input**\n\n```md\n- VuePress - <Badge type="tip" text="v2" vertical="top" />\n- VuePress - <Badge type="warning" text="v2" vertical="middle" />\n- VuePress - <Badge type="danger" text="v2" vertical="bottom" />\n```\n\n**Output**\n\n- VuePress - <Badge type="tip" text="v2" vertical="top" />\n- VuePress - <Badge type="warning" text="v2" vertical="middle" />\n- VuePress - <Badge type="danger" text="v2" vertical="bottom" />\n\n## CodeGroup\n\n- Details:\n\n  Wrapper of the [CodeGroupItem](#codegroupitem) components.\n\n## CodeGroupItem\n\n- Props:\n  - title\n    - Type: `string`\n    - Required: `true`\n  - active\n    - Type: `boolean`\n    - Default: `false`\n\n- Details:\n\n  This component must be placed inside a [CodeGroup](#codegroup) component.\n\n  Use the `active` prop to set the initial active item, or the first item will be activated by default.\n\n- Example:\n\n**Input**\n\n````md\n<CodeGroup>\n  <CodeGroupItem title="YARN">\n\n```bash:no-line-numbers\nyarn\n```\n\n  </CodeGroupItem>\n\n  <CodeGroupItem title="NPM" active>\n\n```bash:no-line-numbers\nnpm install\n```\n\n  </CodeGroupItem>\n</CodeGroup>\n````\n\n**Output**\n\n<CodeGroup>\n  <CodeGroupItem title="YARN">\n\n```bash:no-line-numbers\nyarn\n```\n\n  </CodeGroupItem>\n\n  <CodeGroupItem title="NPM" active>\n\n```bash:no-line-numbers\nnpm install\n```\n\n  </CodeGroupItem>\n</CodeGroup>\n\n::: warning\nYou must add an empty line between the starting tag of `<CodeGroupItem>` and the code fence, otherwise the code fence will not be parsed correctly by Markdown.\n\nAll content must be valid Markdown first, and then a Vue SFC.\n\nLearn more: [Cookbook > Markdown and Vue SFC](../../advanced/cookbook/markdown-and-vue-sfc.md)\n\nAlternatively, you can use the [custom containers](./markdown.md#custom-containers).\n:::\n'}},10627:(e,n,s)=>{s.r(n),s.d(n,{default:()=>G});var a=s(66252);const t=(0,a._)("h1",{id:"built-in-components",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#built-in-components","aria-hidden":"true"},"#"),(0,a.Uk)(" Built-in Components")],-1),l={id:"badge",tabindex:"-1"},o=(0,a._)("a",{class:"header-anchor",href:"#badge","aria-hidden":"true"},"#",-1),p=(0,a.Uk)(" Badge "),i=(0,a.uE)('<ul><li><p>Props:</p><ul><li>type <ul><li>Type: <code>&#39;tip&#39; | &#39;warning&#39; | &#39;danger&#39;</code></li><li>Default: <code>&#39;tip&#39;</code></li></ul></li><li>text <ul><li>Type: <code>string</code></li><li>Default: <code>&#39;&#39;</code></li></ul></li><li>vertical <ul><li>Type: <code>&#39;top&#39; | &#39;middle&#39; | &#39;bottom&#39; | undefined</code></li><li>Default: <code>undefined</code></li></ul></li></ul></li><li><p>Example:</p></li></ul><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6796E6;">-</span><span style="color:#D4D4D4;"> VuePress - &lt;Badge type=&quot;tip&quot; text=&quot;v2&quot; vertical=&quot;top&quot; /&gt;</span></span>\n<span class="line"><span style="color:#6796E6;">-</span><span style="color:#D4D4D4;"> VuePress - &lt;Badge type=&quot;warning&quot; text=&quot;v2&quot; vertical=&quot;middle&quot; /&gt;</span></span>\n<span class="line"><span style="color:#6796E6;">-</span><span style="color:#D4D4D4;"> VuePress - &lt;Badge type=&quot;danger&quot; text=&quot;v2&quot; vertical=&quot;bottom&quot; /&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Output</strong></p>',4),r=(0,a.Uk)("VuePress - "),u=(0,a.Uk)("VuePress - "),d=(0,a.Uk)("VuePress - "),c=(0,a.uE)('<h2 id="codegroup" tabindex="-1"><a class="header-anchor" href="#codegroup" aria-hidden="true">#</a> CodeGroup</h2><ul><li><p>Details:</p><p>Wrapper of the <a href="#codegroupitem">CodeGroupItem</a> components.</p></li></ul><h2 id="codegroupitem" tabindex="-1"><a class="header-anchor" href="#codegroupitem" aria-hidden="true">#</a> CodeGroupItem</h2><ul><li><p>Props:</p><ul><li>title <ul><li>Type: <code>string</code></li><li>Required: <code>true</code></li></ul></li><li>active <ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul></li></ul></li><li><p>Details:</p><p>This component must be placed inside a <a href="#codegroup">CodeGroup</a> component.</p><p>Use the <code>active</code> prop to set the initial active item, or the first item will be activated by default.</p></li><li><p>Example:</p></li></ul><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">&lt;CodeGroup&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  &lt;CodeGroupItem title=&quot;YARN&quot;&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">```bash:no-line-numbers</span></span>\n<span class="line"><span style="color:#D4D4D4;">yarn</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  &lt;/CodeGroupItem&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  &lt;CodeGroupItem title=&quot;NPM&quot; active&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">```bash:no-line-numbers</span></span>\n<span class="line"><span style="color:#D4D4D4;">npm install</span></span>\n<span class="line"><span style="color:#D4D4D4;">```</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  &lt;/CodeGroupItem&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">&lt;/CodeGroup&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>Output</strong></p>',7),m=(0,a._)("div",{class:"language-bash ext-sh"},[(0,a._)("pre",{class:"shiki",style:{"background-color":"#1E1E1E"}},[(0,a._)("code",null,[(0,a._)("span",{class:"line"},[(0,a._)("span",{style:{color:"#D4D4D4"}},"yarn")]),(0,a.Uk)("\n"),(0,a._)("span",{class:"line"})])])],-1),b=(0,a._)("div",{class:"language-bash ext-sh"},[(0,a._)("pre",{class:"shiki",style:{"background-color":"#1E1E1E"}},[(0,a._)("code",null,[(0,a._)("span",{class:"line"},[(0,a._)("span",{style:{color:"#D4D4D4"}},"npm install")]),(0,a.Uk)("\n"),(0,a._)("span",{class:"line"})])])],-1),g={class:"custom-container warning"},h=(0,a._)("p",{class:"custom-container-title"},"WARNING",-1),v=(0,a._)("p",null,[(0,a.Uk)("You must add an empty line between the starting tag of "),(0,a._)("code",null,"<CodeGroupItem>"),(0,a.Uk)(" and the code fence, otherwise the code fence will not be parsed correctly by Markdown.")],-1),y=(0,a._)("p",null,"All content must be valid Markdown first, and then a Vue SFC.",-1),D=(0,a.Uk)("Learn more: "),f=(0,a.Uk)("Cookbook > Markdown and Vue SFC"),k=(0,a.Uk)("Alternatively, you can use the "),C=(0,a.Uk)("custom containers"),w=(0,a.Uk)("."),x={},G=(0,s(83744).Z)(x,[["render",function(e,n){const s=(0,a.up)("NpmBadge"),x=(0,a.up)("Badge"),G=(0,a.up)("CodeGroupItem"),_=(0,a.up)("CodeGroup"),I=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a.Wm)(s,{package:"@vuepress/theme-default"}),(0,a._)("h2",l,[o,p,(0,a.Wm)(x,{text:"badge"})]),i,(0,a._)("ul",null,[(0,a._)("li",null,[r,(0,a.Wm)(x,{type:"tip",text:"v2",vertical:"top"})]),(0,a._)("li",null,[u,(0,a.Wm)(x,{type:"warning",text:"v2",vertical:"middle"})]),(0,a._)("li",null,[d,(0,a.Wm)(x,{type:"danger",text:"v2",vertical:"bottom"})])]),c,(0,a.Wm)(_,null,{default:(0,a.w5)((()=>[(0,a.Wm)(G,{title:"YARN"},{default:(0,a.w5)((()=>[m])),_:1}),(0,a.Wm)(G,{title:"NPM",active:""},{default:(0,a.w5)((()=>[b])),_:1})])),_:1}),(0,a._)("div",g,[h,v,y,(0,a._)("p",null,[D,(0,a.Wm)(I,{to:"/vuepress-next/advanced/cookbook/markdown-and-vue-sfc.html"},{default:(0,a.w5)((()=>[f])),_:1})]),(0,a._)("p",null,[k,(0,a.Wm)(I,{to:"/vuepress-next/reference/default-theme/markdown.html#custom-containers"},{default:(0,a.w5)((()=>[C])),_:1}),w])])],64)}]])}}]);